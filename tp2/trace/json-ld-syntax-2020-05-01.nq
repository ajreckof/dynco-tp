<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/348> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/identifier> "348"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/name> "Update included block example based on ones either side" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/startDate> "2020-04-10T17:48:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/endDate> "2020-04-17T16:06:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/348> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/348> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://schema.org/description> "Closes #255 ... finally!\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n\n### :boom: Error: 500 Internal Server Error :boom: ###\n\n[PR Preview](https://github.com/tobie/pr-preview#pr-preview) failed to build. _(Last tried on Apr 14, 2020, 6:07 PM UTC)_.\n\n<details>\n<summary>More</summary>\n\n\nPR Preview relies on a number of web services to run. There seems to be an issue with the following one:\n\n:rotating_light: [Spec Generator](https://www.w3.org/2015/labs/) - Spec Generator is the web service used to build specs that rely on ReSpec.\n\n:link: [Related URL](https://labs.w3.org/spec-generator/?type=respec&url=https%3A%2F%2Frawcdn.githack.com%2Fw3c%2Fjson-ld-syntax%2F10a2770a5b4e8a217dea309daea69a634ba43505%2Findex.html%3FisPreview%3Dtrue)\n\n```\nNavigation timeout of 30000 ms exceeded\n```\n\n_If you don't have enough information above to solve the error by yourself (or to understand to which web service the error is related to, if any), please [file an issue](https://github.com/tobie/pr-preview/issues/new?title=Error%20not%20surfaced%20properly&body=See%20w3c/json-ld-syntax%23348.)._\n</details>\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/343> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/343"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/identifier> "343"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/name> "FYI: anchors aren't in .html thus cannot be easily validated" .
<https://api.github.com/users/yarikoptic> <http://schema.org/accountId> "yarikoptic" .
<https://api.github.com/users/yarikoptic> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/39889?v=4" .
<https://api.github.com/users/yarikoptic> <http://schema.org/url> "https://github.com/yarikoptic"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/yarikoptic> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:invalid> <http://schema.org/name> "spec:invalid" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:invalid> <http://schema.org/color> "25a873" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:invalid> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:invalid> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/startDate> "2020-04-06T17:21:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/endDate> "2020-04-20T17:59:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://schema.org/description> "JS-powered https://w3c.github.io/json-ld-syntax is really nice, but we encountered difficulty with linkchecker to verify that URLs we use are still correct.  The reason is that it seems that the anchors are populated and/or handled by JS, so anything which just downloads the page without running JS would fail to find those id's.\r\n\r\nE.g. [in our case](https://github.com/bids-standard/bids-specification/pull/439#issuecomment-609920845) it is https://w3c.github.io/json-ld-syntax/#named-graphs  link, for which there is no \"named-graphs\" id in the actual source .html:\r\n\r\n```shell\r\n$> wget -q -O- 'https://w3c.github.io/json-ld-syntax/#named-graphs' | grep 'named-graphs' | grep -v 'href=\"#named-graphs\"'\r\n$> \r\n```\r\n\r\nI am not sure if there is an easy workaround at any level, or may be some alternative link which would lead to an .html version with those anchors?\r\n\r\nPS Please pardon my ignorance if it is something really simple ;)\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/342> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/342"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/identifier> "342"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/name> "Update normative reference for _vocabulary mapping_ term" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/startDate> "2020-03-30T17:59:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/endDate> "2020-03-31T19:53:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/342> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/342"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/342> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/342> <http://schema.org/description> "…to point to Contexts Definitions.\r\n\r\nMove reference to Value Objects up to the _value object_ term.\r\n\r\nFixes #341." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/341> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/341"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/identifier> "341"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/name> "Editorial: Incorrect internal spec reference for @vocab section" .
<https://api.github.com/users/dbooth-boston> <http://schema.org/accountId> "dbooth-boston" .
<https://api.github.com/users/dbooth-boston> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/5123226?v=4" .
<https://api.github.com/users/dbooth-boston> <http://schema.org/url> "https://github.com/dbooth-boston"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dbooth-boston> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/creator> <https://api.github.com/users/dbooth-boston> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/name> "wr:pending" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/color> "bbf76c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/name> "wr:spec-updated" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/color> "2add6c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/startDate> "2020-03-30T17:24:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/endDate> "2020-03-31T19:53:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://schema.org/description> "At the end of section 1.4 in the March 23, 2020 editor's version of 1.1 syntax, the description of \"vocabulary mapping\" says: \"See the Value Objects section of JSON-LD 1.1 for a normative description.\"\r\nhttps://w3c.github.io/json-ld-syntax/#terminology\r\n\r\nShouldn't that be pointing to the \"Default Vocabulary\" section instead?\r\nhttps://w3c.github.io/json-ld-syntax/#default-vocabulary\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/340> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/340"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/identifier> "340"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/name> "Describe `@prefix: false` behavior" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/startDate> "2020-03-22T20:41:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/endDate> "2020-03-23T16:54:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/340> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/340"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/340> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/340> <http://schema.org/description> "and not that this affects both expansion and compaction.\n\nFixes #339.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/340.html\" title=\"Last updated on Mar 22, 2020, 8:41 PM UTC (d40f805)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/340/65a8c08...d40f805.html\" title=\"Last updated on Mar 22, 2020, 8:41 PM UTC (d40f805)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/339> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/339"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/identifier> "339"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/name> "`\"@prefix\": false` behavior not specified" .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/startDate> "2020-03-20T01:41:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/endDate> "2020-03-23T16:54:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://schema.org/description> "The spec asserts that one can assert that a de-facto non-prefix should act like a prefix if  `\"@prefix\":true`, but there is no discussion about the opposite situation.  We've got a spec that looks like:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"an id\": \"http://example.org/predicate#\"\r\n  },\r\n  \"an id\": true\r\n}\r\n```\r\n\r\nWhen this is serialized in turtle format using rdflib-jsonld 1.1 branch, it emits:\r\n```ttl\r\n@prefix an id: <http://example.org/predicate#> .\r\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix xml: <http://www.w3.org/XML/1998/namespace> .\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n\r\n[] an id: true .\r\n```\r\nWhich isn't valid.  I try to override it with\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"an id\": {\"@id\": \"http://example.org/predicate#\", \r\n              \"@prefix\": false}\r\n  },\r\n  \"an id\": true\r\n}\r\n```\r\n\r\nThe behavior didn't change.  I can't find anything in the spec that _does_ say what the behavior\r\nof `\"@prefix\": false` should be.  Can we clarify (NOT a prefix I hope) so I can request a change in the rdflib code?\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/338> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/identifier> "338"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/name> "Why is (Non-Transitive) Cyclic IRI Mapping an Error?" .
<https://api.github.com/users/Aklakan> <http://schema.org/accountId> "Aklakan" .
<https://api.github.com/users/Aklakan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/839608?v=4" .
<https://api.github.com/users/Aklakan> <http://schema.org/url> "https://github.com/Aklakan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Aklakan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/creator> <https://api.github.com/users/Aklakan> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/name> "wr:pending" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/color> "bbf76c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:pending> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/startDate> "2020-03-15T20:28:21Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/endDate> "2020-03-16T20:38:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://schema.org/description> "Both versions of the spec at [1] and [2] state:\r\n\r\n```\r\nOtherwise, if the value is false, a cyclic IRI mapping error has been detected and processing is aborted.\r\n```\r\n\r\nIn order to parse queries that make use of Virtuoso's `bif` namespace, I so far used a turtle file with prefix declarations such as `@prefix bif: <bif:> .` I wanted to switch to json-ld and found out that `{\"@context\": {\"bif\":\"bif:\"}}` fails to parse with JSON-LD using json-ld-java 0.12.5 via jena 3.14.0 (latest jena release at the time of writing). As a cyclic prefix declaration turns CURIEs into URIs - one would expect that a purely syntactic construct `bif:Foo` can be parsed into the RDF term`<bif:Foo>` if the prefix mapping says so.\r\n\r\nFor example, this query uses both syntactic variants and both work fine on http://dbpedia.org/sparql\r\n```\r\nPREFIX bif: <bif:>\r\nSELECT * {\r\n  # With strict var checking enabled, Virtuoso complains if there are no triple patterns\r\n  OPTIONAL { ?s <urn:foobar> ?o } \r\n  \r\n  BIND(bif:sys_stat('st_dbms_name') AS ?dbmsRawName) # CURIE\r\n  BIND(<bif:sys_stat>('st_dbms_ver') AS ?dbmsVersion) # URI\r\n}\r\n```\r\n\r\nSo is this a bug / limitation in the json-ld spec itself or is it a bug of the json-ld-java implementation?\r\n\r\n\r\n\r\n[1] https://json-ld.org/spec/latest/json-ld-api/#algorithm-0\r\n[2] https://w3c.github.io/json-ld-api/#algorithm-0\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/337> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/337"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/identifier> "337"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/name> "Update affiliation" .
<https://api.github.com/users/lanthaler> <http://schema.org/accountId> "lanthaler" .
<https://api.github.com/users/lanthaler> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/456407?v=4" .
<https://api.github.com/users/lanthaler> <http://schema.org/url> "https://github.com/lanthaler"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lanthaler> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/creator> <https://api.github.com/users/lanthaler> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/startDate> "2020-03-08T16:05:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/endDate> "2020-03-08T18:53:02Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/337> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/337"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/337> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/337> <http://schema.org/description> ".. and switch URL to https\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n\n### :boom: Error: 500 Internal Server Error :boom: ###\n\n[PR Preview](https://github.com/tobie/pr-preview#pr-preview) failed to build. _(Last tried on Mar 8, 2020, 4:06 PM UTC)_.\n\n<details>\n<summary>More</summary>\n\n\nPR Preview relies on a number of web services to run. There seems to be an issue with the following one:\n\n:rotating_light: [Spec Generator](https://www.w3.org/2015/labs/) - Spec Generator is the web service used to build specs that rely on ReSpec.\n\n:link: [Related URL](https://labs.w3.org/spec-generator/?type=respec&url=https%3A%2F%2Frawcdn.githack.com%2Flanthaler%2Fjson-ld-syntax%2Fb2ada1296416d0595dddf5467ef078c8d750e2f3%2Findex.html%3FisPreview%3Dtrue)\n\n```\nNavigation timeout of 30000 ms exceeded\n```\n\n_If you don't have enough information above to solve the error by yourself (or to understand to which web service the error is related to, if any), please [file an issue](https://github.com/tobie/pr-preview/issues/new?title=Error%20not%20surfaced%20properly&body=See%20w3c/json-ld-syntax%23337.)._\n</details>\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/336> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/336"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/identifier> "336"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/name> "Fix typos." .
<https://api.github.com/users/davidlehn> <http://schema.org/accountId> "davidlehn" .
<https://api.github.com/users/davidlehn> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/109587?v=4" .
<https://api.github.com/users/davidlehn> <http://schema.org/url> "https://github.com/davidlehn"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/davidlehn> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/creator> <https://api.github.com/users/davidlehn> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/startDate> "2020-03-08T01:22:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/endDate> "2020-03-08T14:58:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/336> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/336"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/336> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/336> <http://schema.org/description> "\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n\n### :boom: Error: 500 Internal Server Error :boom: ###\n\n[PR Preview](https://github.com/tobie/pr-preview#pr-preview) failed to build. _(Last tried on Mar 8, 2020, 1:22 AM UTC)_.\n\n<details>\n<summary>More</summary>\n\n\nPR Preview relies on a number of web services to run. There seems to be an issue with the following one:\n\n:rotating_light: [Spec Generator](https://www.w3.org/2015/labs/) - Spec Generator is the web service used to build specs that rely on ReSpec.\n\n:link: [Related URL](https://labs.w3.org/spec-generator/?type=respec&url=https%3A%2F%2Frawcdn.githack.com%2Fw3c%2Fjson-ld-syntax%2Fdd6c638f086a83ebc04f0d16f9bca8b7379a38eb%2Findex.html%3FisPreview%3Dtrue)\n\n```\nNavigation timeout of 30000 ms exceeded\n```\n\n_If you don't have enough information above to solve the error by yourself (or to understand to which web service the error is related to, if any), please [file an issue](https://github.com/tobie/pr-preview/issues/new?title=Error%20not%20surfaced%20properly&body=See%20w3c/json-ld-syntax%23336.)._\n</details>\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/335> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/335"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/identifier> "335"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/name> "Type Coercion / Node Conversion: @coerce keyword or similar" .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/accountId> "michaelcpuckett" .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1172424?v=4" .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/url> "https://github.com/michaelcpuckett"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/michaelcpuckett> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/creator> <https://api.github.com/users/michaelcpuckett> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/name> "defer-future-version" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/description> "Defer this issue until a future version of JSON-LD" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/startDate> "2020-02-29T18:45:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/335> <http://schema.org/description> "I have an idea for a future version of JSON-LD.\r\n\r\nAs a web developer, I would like to receive a JSON document from i.e. a simple API, add a `@context` to it, and perform JSON-LD operations. This light approach has been a big selling point to me for using JSON-LD.\r\n\r\nA common response from such an API may include an \"id\" property as a number (as it is indexed in the source database as an integer), so after applying the `@context` the document may look like this:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@base\": \"http://starwars.com/\",\r\n    \"@vocab\": \"http://starwars.com/\",\r\n    \"id\": \"@id\",\r\n    \"type\": \"@type\"\r\n  },\r\n  \"id\": 123,\r\n  \"type\": \"Human\",\r\n  \"firstName\": \"Luke\",\r\n  \"lastName\": \"Skywalker\"\r\n}\r\n```\r\n\r\nCurrently, the expansion step will generate an error:\r\n\r\n`Invalid JSON-LD syntax; \"@id\" value must a string.`\r\n\r\nMy intention in declaring the `@base` was to form the IRI \"http://starwars.com/123\". I don't think this kind of type coercion is currently possible with JSON-LD.\r\n\r\nThe alternative would be a blank node with a custom ID property, which is less useful in certain situations.\r\n\r\nI propose a solution that coerces the XSD type, so that when flattened, it becomes:\r\n\r\n```\r\n[\r\n  {\r\n    \"@id\": \"http://starwars.com/123\",\r\n    \"@type\": [\r\n      \"http://starwars.com/Human\"\r\n    ],\r\n    \"http://starwars.com/firstName\": [\r\n      {\r\n        \"@value\": \"Luke\"\r\n      }\r\n    ],\r\n    \"http://starwars.com/lastName\": [\r\n      {\r\n        \"@value\": \"Skywalker\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n```\r\n\r\nAs a starting point, I suggest adding a keyword called `@coerce`.\r\n\r\nI originally opened this as an issue in Framing and got some helpful feedback from @gkellogg:\r\n\r\nhttps://github.com/w3c/json-ld-framing/issues/98\r\n\r\n> This would probably be in compaction/expansion rather than framing. It is somewhat similar to the useNativeTypes option for fromRdf.\r\n> \r\n> It’s a common idiom in JSON, so it’s worthy of future consideration." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/334> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/334"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/identifier> "334"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/name> "Add paragraph noting that application/ld+json represents an update" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/startDate> "2020-02-28T22:57:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/endDate> "2020-02-29T16:32:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/334> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/334"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/334> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/334> <http://schema.org/description> "to that from JSON-LD 1.0.\n\n@iherman See if this is adequate to satisfy the request from IANA to note that this is an update.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/334.html\" title=\"Last updated on Feb 29, 2020, 1:37 AM UTC (f1e7c01)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/334/4a70128...f1e7c01.html\" title=\"Last updated on Feb 29, 2020, 1:37 AM UTC (f1e7c01)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/333> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/333"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/identifier> "333"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/name> "Bump nokogiri from 1.10.7 to 1.10.8" .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/accountId> "dependabot[bot]" .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/image> "https://avatars0.githubusercontent.com/in/29110?v=4" .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/url> "https://github.com/apps/dependabot"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#Bot> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/creator> <https://api.github.com/users/dependabot%5Bbot%5D> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/hr:device%20independence> <http://schema.org/name> "hr:device independence" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/hr:device%20independence> <http://schema.org/color> "d88124" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/hr:device%20independence> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/hr:device%20independence> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/startDate> "2020-02-25T11:43:47Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/endDate> "2020-02-25T18:12:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/333> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/333"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/333> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://schema.org/description> "Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.10.7 to 1.10.8.\n<details>\n<summary>Release notes</summary>\n\n*Sourced from [nokogiri's releases](https://github.com/sparklemotion/nokogiri/releases).*\n\n> ## 1.10.8 / 2020-02-10\r\n> \r\n> ### Security\r\n> \r\n> [MRI] Pulled in upstream patch from libxml that addresses CVE-2020-7595. Full details are available in [#1992](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1992). Note that this patch is not yet (as of 2020-02-10) in an upstream release of libxml.\r\n> \r\n> \r\n</details>\n<details>\n<summary>Changelog</summary>\n\n*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*\n\n> # Nokogiri (1.10.7)\n>     ---\n>     warnings: []\n>     nokogiri: 1.10.7\n>     ruby:\n>       version: 2.7.0\n>       platform: x86_64-linux\n>       description: ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]\n>       engine: ruby\n>     libxml:\n>       binding: extension\n>       source: packaged\n>       libxml2_path: \"/home/flavorjones/.rvm/gems/ruby-2.7.0/gems/nokogiri-1.10.7/ports/x86_64-pc-linux-gnu/libxml2/2.9.10\"\n>       libxslt_path: \"/home/flavorjones/.rvm/gems/ruby-2.7.0/gems/nokogiri-1.10.7/ports/x86_64-pc-linux-gnu/libxslt/1.1.34\"\n>       libxml2_patches:\n>       - 0001-Revert-Do-not-URI-escape-in-server-side-includes.patch\n>       - 0002-Remove-script-macro-support.patch\n>       - 0003-Update-entities-to-remove-handling-of-ssi.patch\n>       - 0004-libxml2.la-is-in-top_builddir.patch\n>       libxslt_patches: []\n>       compiled: 2.9.10\n>       loaded: 2.9.10\n> ```\n> \n> but now looks like:\n> \n> ```\n> # Nokogiri (1.11.0)\n>     ---\n>     warnings: []\n>     nokogiri: 1.11.0\n>     ruby:\n>       version: 2.7.0\n>       platform: x86_64-linux\n>       description: ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]\n>       engine: ruby\n>     libxml:\n>       source: packaged\n>       patches:\n>       - 0001-Revert-Do-not-URI-escape-in-server-side-includes.patch\n>       - 0002-Remove-script-macro-support.patch\n>       - 0003-Update-entities-to-remove-handling-of-ssi.patch\n>       - 0004-libxml2.la-is-in-top_builddir.patch\n>       compiled: 2.9.10\n>       loaded: 2.9.10\n>     libxslt:\n>       source: packaged\n>       patches: []\n>       compiled: 1.1.34\n>       loaded: 1.1.34\n></tr></table> ... (truncated)\n</details>\n<details>\n<summary>Commits</summary>\n\n- [`6ce10d1`](https://github.com/sparklemotion/nokogiri/commit/6ce10d15d7af6ad65813a495eaf168f73eba211c) version bump to v1.10.8\n- [`2320f5b`](https://github.com/sparklemotion/nokogiri/commit/2320f5bd6319dca9c68d85bbf41629bbf8052a49) update CHANGELOG for v1.10.8\n- [`4a77fdb`](https://github.com/sparklemotion/nokogiri/commit/4a77fdb789aefed7ca65c7c7f57ad4dca0d3b209) remove patches from the hoe Manifest\n- [`570b6cb`](https://github.com/sparklemotion/nokogiri/commit/570b6cbc5fbc5ee7ef969332c587b951ae35bcd0) update to use rake-compiler ~1.1.0\n- [`2cdb68e`](https://github.com/sparklemotion/nokogiri/commit/2cdb68e95aa075ac36a08d4d82d9b410a950a051) backport libxml2 patch for CVE-2020-7595\n- See full diff in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.10.7...v1.10.8)\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.10.7&new-version=1.10.8)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/w3c/json-ld-syntax/network/alerts).\n\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/332> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/332"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/identifier> "332"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/name> "Keyword `@preserve` missing?" .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/startDate> "2020-02-25T09:57:31Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/endDate> "2020-03-23T16:53:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://schema.org/description> "I just discovered that the API and Framing document have a few mentions of `@preserve`, but this keyword(?) is never mentioned in the Syntax document..." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/331> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/331"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/identifier> "331"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/name> "Comment out `+ld+json` mime extensions." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/startDate> "2020-02-22T01:47:11Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/endDate> "2020-02-25T18:13:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/331> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/331"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/331> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/331> <http://schema.org/description> "See https://lists.w3.org/Archives/Public/public-json-ld-wg/2020Feb/0024.html.\n\n> It seems that the *+ld+json is an issue for IETF and cannot be done.\n\n> I think that, at this point, we should remove this thing from the JSON-LD spec and finalize the spec with ld+json. I do not think we should make the progress towards a Rec stop because of that.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/331.html\" title=\"Last updated on Feb 22, 2020, 1:47 AM UTC (7e1ee2d)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/331/17dd029...7e1ee2d.html\" title=\"Last updated on Feb 22, 2020, 1:47 AM UTC (7e1ee2d)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/330> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/330"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/identifier> "330"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/name> "Add back changes since CR." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/ms:CR> <http://schema.org/name> "ms:CR" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/ms:CR> <http://schema.org/color> "e4fca9" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/ms:CR> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/ms:CR> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/startDate> "2020-02-14T19:05:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/endDate> "2020-02-19T14:54:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/330> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/330"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/330> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/330> <http://schema.org/description> "\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/330.html\" title=\"Last updated on Feb 14, 2020, 7:09 PM UTC (ece9c80)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/330/b157315...ece9c80.html\" title=\"Last updated on Feb 14, 2020, 7:09 PM UTC (ece9c80)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/329> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/identifier> "329"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/name> "Suggestion about `@prefix`" .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/name> "defer-future-version" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/description> "Defer this issue until a future version of JSON-LD" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/startDate> "2020-02-13T21:04:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://schema.org/description> "How difficult would it be able to set  `@prefix`  globally?  We've got quite a collection of non-standard prefixes and it kind of busies up the context document when we have to add the properties individually?\r\n\r\n```\r\n{   \"@context\": {\r\n        \"@prefix\": true,\r\n        \"CHEBI\": \"http://example.org/CHEBI_\",\r\n        \"CUBBY: \"http://example.orrg/CUBBY_\"\r\n   }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/328> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/328"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/identifier> "328"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/name> "@default in @context in JSON-LD core syntax" .
<https://api.github.com/users/lsimichael> <http://schema.org/accountId> "lsimichael" .
<https://api.github.com/users/lsimichael> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/42276322?v=4" .
<https://api.github.com/users/lsimichael> <http://schema.org/url> "https://github.com/lsimichael"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/lsimichael> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/creator> <https://api.github.com/users/lsimichael> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/name> "defer-future-version" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/description> "Defer this issue until a future version of JSON-LD" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/startDate> "2020-02-11T21:05:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://schema.org/description> "(See below)" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/327> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/327"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/identifier> "327"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/name> "Update description of i18n datatype" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/startDate> "2020-01-28T23:36:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/endDate> "2020-01-29T19:46:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/327> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/327"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/327> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/327> <http://schema.org/description> "and Compound Literal to lower case language tags.\n\nFor w3c/json-ld-api#337.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/327.html\" title=\"Last updated on Jan 29, 2020, 6:05 PM UTC (ea2bc38)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/327/f55efdc...ea2bc38.html\" title=\"Last updated on Jan 29, 2020, 6:05 PM UTC (ea2bc38)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/326> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/326"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/identifier> "326"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/name> "Issue324" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/startDate> "2020-01-25T21:34:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/endDate> "2020-01-29T19:47:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/326> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/326"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/326> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/326> <http://schema.org/description> "* Add missing description of using `@index` in an expanded term definition. Fixes #324.\n* Comment out and clear Changes since CR section.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/326.html\" title=\"Last updated on Jan 28, 2020, 9:27 PM UTC (8d3d281)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/326/f55efdc...8d3d281.html\" title=\"Last updated on Jan 28, 2020, 9:27 PM UTC (8d3d281)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/325> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/identifier> "325"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/name> "changed definition of the rdf:JSON datatype" .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/startDate> "2020-01-24T15:19:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/endDate> "2020-01-24T18:08:39Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/325> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/325> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://schema.org/description> "addressing #323\n\nNote that the description of the canonical form, which used to be non-normative (and using SHOULD) is now normative and uses MUST. It seemed inappropriate to define the value space non-normatively... :-/\n\nAs a consequence, the corresponding text in [API 8.6 Data Round Tripping](http://localhost:8000/json-ld-api/#data-round-tripping) is states:\n\n> The canonical lexical form of a JSON literal value is non-normative, \n\nand still uses SHOULD. I guess we should update it as well?\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/325.html\" title=\"Last updated on Jan 24, 2020, 4:37 PM UTC (a25e7e5)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/325/597a8c4...a25e7e5.html\" title=\"Last updated on Jan 24, 2020, 4:37 PM UTC (a25e7e5)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/324> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/324"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/identifier> "324"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/name> "expanded term definition missing entry for @index" .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated-partial> <http://schema.org/name> "wr:spec-updated-partial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated-partial> <http://schema.org/color> "db13a9" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated-partial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated-partial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://example.com/ns#assignee> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/startDate> "2020-01-24T01:23:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/endDate> "2020-01-29T19:47:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/324> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/323> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/identifier> "323"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/name> "Is the value space of rdf:JSON and xsd:boolean disjoint?" .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-no-response> <http://schema.org/name> "wr:commenter-no-response" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-no-response> <http://schema.org/color> "a9f9e5" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-no-response> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-no-response> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/name> "wr:spec-updated" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/color> "2add6c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#assignee> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/startDate> "2020-01-14T15:53:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/endDate> "2020-02-10T19:30:38Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://schema.org/description> "I'd ask about xsd:strings and xsd:double too, but I'm not even sure if their definitions in ECMAScript are equivalent to the XSD ones.\r\n\r\n[xsd:boolean](https://www.w3.org/TR/xmlschema11-2/#boolean):\r\n> 3.3.2.1 Value Space\r\n> boolean has the ·value space· of two-valued logic:  {true, false}.\r\n\r\n[ECMAScript boolean](https://tc39.es/ecma262/#sec-ecmascript-language-types-boolean-type):\r\n> 6.1.3The Boolean Type\r\n> The Boolean type represents a logical entity having two values, called true and false.\r\n\r\n[RDF:JSON](https://www.w3.org/TR/json-ld/#the-rdf-json-datatype):\r\n> The value space\r\n> is the union of the four primitive types (strings, numbers, booleans, and null) and two structured types (objects and arrays) from [ECMASCRIPT]. Two JSON values A and B are considered equal if and only if the following is true:\r\n> 1. If A and B are both objects, (...)\r\n> 2. Otherwise, if A and B are both arrays, (...)\r\n> 3. Otherwise, if A and B satisfy the Strict Equality Comparison defined in Section 7.2.15 in [ECMASCRIPT].\r\n> 4. Otherwise, A and B are not equal.\r\n\r\nIf I were to guess, I'd guess they are disjoint, because that would be similar to the handling of xsd:hexBinary and xsd:base64binary. On the other hand - the definitions look equal, and nothing says explicitely that they should be disjoint." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/322> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/322"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/identifier> "322"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/name> "Update section references into ECMASCRIPT for JSON comparison." .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/startDate> "2020-01-08T18:53:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/endDate> "2020-01-10T23:32:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/322> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/322"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/322> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/322> <http://schema.org/description> "For #321.\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/322.html\" title=\"Last updated on Jan 8, 2020, 6:54 PM UTC (ae0f718)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/322/8a8eead...ae0f718.html\" title=\"Last updated on Jan 8, 2020, 6:54 PM UTC (ae0f718)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/321> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/321"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/identifier> "321"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/name> "Typo in reference to ECMASCRIPT equality testing" .
<https://api.github.com/users/kasei> <http://schema.org/accountId> "kasei" .
<https://api.github.com/users/kasei> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/4872?v=4" .
<https://api.github.com/users/kasei> <http://schema.org/url> "https://github.com/kasei"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kasei> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/creator> <https://api.github.com/users/kasei> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-agreed> <http://schema.org/name> "wr:commenter-agreed" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-agreed> <http://schema.org/color> "5ce060" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-agreed> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:commenter-agreed> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/name> "wr:spec-updated" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/color> "2add6c" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/wr:spec-updated> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/startDate> "2020-01-06T19:02:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/endDate> "2020-01-10T23:33:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://schema.org/description> "The discussion of the value space of [the rdf:JSON Datatype](https://www.w3.org/TR/json-ld11/#the-rdf-json-datatype) says:\r\n\r\n> Otherwise, if A and B satisfy the Strict Equality Comparison defined in Section 7.2.15 in [ECMASCRIPT].\r\n\r\nThis seems to be a typo as both the links in this sentence point to section 7.2.16 (\"Strict Equality Comparison\") of the ECMASCRIPT spec.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/304> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/304"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/identifier> "304"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/name> "Address issue #303" .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/startDate> "2019-11-21T18:47:16Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/endDate> "2019-11-22T16:58:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/304> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/304"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/304> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/304> <http://schema.org/description> "* closed missing '****' in the expanded result of example 13\n* improved consistency of '****'-emphasis in example 13 & 14\n\n\n<!--\n    This comment and the below content is programatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/pull/304.html\" title=\"Last updated on Nov 21, 2019, 6:47 PM UTC (b17640f)\">Preview</a> | <a href=\"https://pr-preview.s3.amazonaws.com/w3c/json-ld-syntax/304/021edaa...b17640f.html\" title=\"Last updated on Nov 21, 2019, 6:47 PM UTC (b17640f)\">Diff</a>" .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/282> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/282"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/identifier> "282"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/name> "Weaken requirement to normalize language tags" .
<https://api.github.com/users/rubensworks> <http://schema.org/accountId> "rubensworks" .
<https://api.github.com/users/rubensworks> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/440384?v=4" .
<https://api.github.com/users/rubensworks> <http://schema.org/url> "https://github.com/rubensworks"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/rubensworks> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/creator> <https://api.github.com/users/rubensworks> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/name> "propose closing" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/color> "bf5315" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/propose%20closing> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/startDate> "2019-10-08T12:47:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/endDate> "2019-10-19T11:03:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/pulls/282> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/282"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://example.com/ns#pullRequest> <https://api.github.com/repos/w3c/json-ld-syntax/pulls/282> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/282> <http://schema.org/description> "As mentioned by @gkellogg in https://github.com/w3c/json-ld-api/pull/164, this weakens the requirement for normalizing language tags to lowercase, and makes it a \"MAY\", just like the RDF spec does." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/255> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/255"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/identifier> "255"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/name> "Better example for included blocks" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/name> "spec:editorial" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/color> "58820a" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> <http://schema.org/description> "" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/spec:editorial> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#ClosedIssue> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://example.com/ns#assignee> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/startDate> "2019-09-17T00:26:43Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/endDate> "2020-04-17T16:06:35Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/255> <http://schema.org/description> "\r\nI know it's my example, but like the fred/barney one, it's a specific use case rather than a good teaching tool. I'll assign myself to come up with an easier one to explain." .
<https://api.github.com/repos/w3c/json-ld-syntax> <http://example.com/ns#issue> <https://api.github.com/repos/w3c/json-ld-syntax/issues/108> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/identifier> "108"^^<http://www.w3.org/2001/XMLSchema#integer> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/name> "Consider context by reference with metadata" .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/name> "defer-future-version" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/color> "000000" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> <http://schema.org/description> "Defer this issue until a future version of JSON-LD" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/defer-future-version> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/name> "privacy-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/color> "d4af37" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> <http://schema.org/description> "Group bringing to attention of Privacy, or tracked by the Privacy Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/privacy-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/name> "security-tracker" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/color> "ffff00" .
<https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> <http://schema.org/description> "Group bringing to attention of security, or tracked by the security Group but not needing response." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#label> <https://api.github.com/repos/w3c/json-ld-syntax/labels/security-tracker> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#OpenIssue> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/startDate> "2018-12-14T22:34:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://schema.org/description> "\r\nOn the call of 2018-12-14, we discussed (briefly) #20, #98, and #86. One realization that came out of the discussion was that we currently have two ways to refer to contexts - either by references as a single string (the URI of the context) or by value as a JSON object (the actual context). In order to have in-document metadata about the context, such as asserting fixity such as via the SRI specification, we would need to have a URI with additional metadata about it.\r\n\r\nQuestions that arise:\r\n\r\n* How to distinguish between a context by value JSON object and a context by reference with metadata JSON object?\r\n* As the version is in the context, and this functionality is only version 1.1, how would we signal the processing requirement - some sort of transclusion within a context that has the version?\r\n* Are metadata properties extensible or fixed in the specification? If they're extensible, we would need some sort of meta-context wherein the mapping is asserted. If they're fixed, we would need to be very careful to accommodate the various use cases otherwise the tendency will be to simply add in new keys regardless and hope for the best.\r\n\r\nFor example:\r\n\r\n```\r\n{\r\n  \"@context\": [\r\n    \"https://example.com/context-by-reference\",\r\n    {\"id\": \"@id\"},\r\n    {\"@version\": 1.1, \"@context\": \"https://example.com/context-with-metadata\", \"@sri\": \"sha256-abcd\"}\r\n  ]\r\n}\r\n```\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/321#issuecomment-571307036"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> .
<https://api.github.com/users/kasei> <http://schema.org/accountId> "kasei" .
<https://api.github.com/users/kasei> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/4872?v=4" .
<https://api.github.com/users/kasei> <http://schema.org/url> "https://github.com/kasei"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kasei> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> <http://schema.org/creator> <https://api.github.com/users/kasei> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> <http://schema.org/startDate> "2020-01-06T20:45:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/571307036> <http://schema.org/description> "The link to 7.2.12 also seems to be mis-numbered (it actually links to 7.2.13)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/321#issuecomment-572206723"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> <http://schema.org/startDate> "2020-01-08T18:54:24Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/572206723> <http://schema.org/description> "Updated in #322. @kasei please acknowledge." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/321#issuecomment-573242788"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/321> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> .
<https://api.github.com/users/kasei> <http://schema.org/accountId> "kasei" .
<https://api.github.com/users/kasei> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/4872?v=4" .
<https://api.github.com/users/kasei> <http://schema.org/url> "https://github.com/kasei"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/kasei> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> <http://schema.org/creator> <https://api.github.com/users/kasei> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> <http://schema.org/startDate> "2020-01-10T23:16:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/573242788> <http://schema.org/description> "@gkellogg looks good. Thanks." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574313208"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> <http://schema.org/startDate> "2020-01-14T18:37:50Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574313208> <http://schema.org/description> "From a very pedantic point of view, nothing in XSD's and Ecmascript's respective definitions formally asserts that they are referring to the same thing, even if they both call them \"true\" and \"false\". That being said, I would tend to agree with you that the *intention* is to refer to the same thing, and so that `\"true\"^^xsd:boolean` and `\"true\"^^rdf:json` denote the same value.\r\n\r\n> I'd guess they are disjoint, because that would be similar to the handling of xsd:hexBinary and xsd:base64binary\r\n\r\nWhat do you mean by \"handling\"? JSON-LD processors are not concerned about the *semantics* of literals, and they are never expected to treat two literals with different datatypes as if they were the same, even if they happen to denote the same value (as `\"true\"^^xsd:boolean` and `\"true\"^^rdf:json`, or `\"ff\"^^xsd:hexBinary` and `\"FF\"^^xsd:hexBinary for that matter`)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574342697"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> <http://schema.org/startDate> "2020-01-14T19:49:51Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574342697> <http://schema.org/description> "> > I'd guess they are disjoint, because that would be similar to the handling of xsd:hexBinary and xsd:base64binary\r\n> \r\n> What do you mean by \"handling\"? JSON-LD processors are not concerned about the _semantics_ of literals, and they are never expected to treat two literals with different datatypes as if they were the same, even if they happen to denote the same value (as `\"true\"^^xsd:boolean` and `\"true\"^^rdf:json`, or `\"ff\"^^xsd:hexBinary` and `\"FF\"^^xsd:hexBinary for that matter`).\r\n\r\nI mean that xsd:hexBinary and xsd:base64Binary are [defined in the XSD spec as disjoint](https://www.w3.org/TR/xmlschema11-2/#order):\r\n> For purposes of this specification, the value spaces of primitive datatypes are disjoint, even in cases where the abstractions they represent might be thought of as having values in common.\r\n\r\nThis has [further effects on OWL processing](https://www.w3.org/TR/owl2-syntax/#Binary_Data):\r\n> According to XML Schema, the value spaces of xsd:hexBinary and xsd:base64Binary are isomorphic copies of the set of all finite sequences of octets — integers between 0 and 255, inclusive. To understand the effect that the disjointness requirement has on the semantics of OWL 2, consider the following example ontology:\r\n> - DataPropertyRange( a:personID xsd:base64Binary ) # The range of the a:personID property is xsd:base64Binary.\r\n> - DataPropertyAssertion( a:personID a:Meg \"0203\"^^xsd:hexBinary ) # The ID of Meg is the octet sequence consisting of the octets 2 and 3.\r\n>\r\n> The first axiom states that all values of the a:personID property must be in the value space of xsd:base64Binary, but the second axiom provides a value for a:personID that is in the value space of xsd:hexBinary. Since the value spaces of xsd:hexBinary and xsd:base64Binary are disjoint, the above ontology is inconsistent.\r\n\r\nSo, in practical terms, if `\"true\"^^xsd:boolean` and `\"true\"^^rdf:JSON` are the same **true** value, then:\r\n* one can use `\"true\"^^xsd:boolean` in every place where `rdf:JSON` is expected,\r\n* even if property `:x` is defined as a `owl:FunctionalProperty`, you can assert both `_:a :x \"true\"^^xsd:boolean` and `_:a :x \"true\"^^rdf:JSON`, and this will be consistent." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574362329"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> <http://schema.org/startDate> "2020-01-14T20:37:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574362329> <http://schema.org/description> "I think it's a bit different than asking about the value space of `\"1^^xsd:integer` and `\"1\"^^xsd:decimal`, as those are clearly numbers. In the case of `\"1\"^^rdf:JSON`, it is a JSON value, which _may_ be interpreted as a number, certainly when parsed by a JSON parser. The fact that it could be interpreted so directly is something of a special case.\r\n\r\nThe point of the rdf:JSON datatype is to represent JSON values, much as rdf:HTML can represent HTML values. Because rdf:HTML represents DOM fragments, such a fragment could be \"1\", would this imply that the literal `\"1\"^^rdfHTML` should be considered to be the same value? I think not." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574369293"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> <http://schema.org/startDate> "2020-01-14T20:54:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574369293> <http://schema.org/description> "> This has further effects on OWL processing\r\n\r\nDepending on which [datatype map](https://www.w3.org/TR/owl2-syntax/#Datatype_Maps) you are using, yes. But not all OWL processor are expected to support all possible datatype.\r\n\r\nI agree that this may open a pandora box, though. And in fact, JSON is not defined as a serialization of Ecmascript, so the denotation of `\"true\"^^rdf:json` is not bound to be interpreted as Ecmascript's **true**. I think this is the path suggested by @gkellogg, and I tend to agree." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574372232"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> <http://schema.org/startDate> "2020-01-14T21:01:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372232> <http://schema.org/description> "> The point of the rdf:JSON datatype is to represent JSON values, much as rdf:HTML can represent HTML values. Because rdf:HTML represents DOM fragments, such a fragment could be \"1\", would this imply that the literal `\"1\"^^rdfHTML` should be considered to be the same value? I think not.\r\n\r\n**1** in HTML is just a string, so it's a different value than a number.\r\n\r\nOTOH, [RDF spec says](https://www.w3.org/TR/rdf11-concepts/#section-html):\r\n> RDF applications may use additional equivalence relations, such as that which relates an xsd:string with an rdf:HTML literal corresponding to a single text node of the same string.\r\n\r\nStill, equivalence is not identity (for example `\"-0\"^^xsd:float` and `\"+0\"^^xsd:float` are equal, but not identical, and are therefore treated as different values in OWL), and the `rdf:HTML` value space is defined in terms of DOM `DocumentFragment`s, so I'm pretty sure `'a'^^rdf:HTML` is a different value than `'a'^^xsd:string`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574372946"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> <http://schema.org/startDate> "2020-01-14T21:03:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574372946> <http://schema.org/description> "> I think it's a bit different than asking about the value space of `\"1^^xsd:integer` and `\"1\"^^xsd:decimal`, as those are clearly numbers. In the case of `\"1\"^^rdf:JSON`, it is a JSON value, which _may_ be interpreted as a number, certainly when parsed by a JSON parser. The fact that it could be interpreted so directly is something of a special case.\r\n\r\nThe spec says that the value of `\"1\"^^rdf:JSON` **is** a number (the ECMAScript number), so it's not just something that can be interpreted this way." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574374476"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> <http://schema.org/startDate> "2020-01-14T21:07:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574374476> <http://schema.org/description> "> I agree that this may open a pandora box, though. And in fact, JSON is not defined as a serialization of Ecmascript, so the denotation of `\"true\"^^rdf:json` is not bound to be interpreted as Ecmascript's **true**. I think this is the path suggested by @gkellogg, and I tend to agree.\r\n\r\nUnfortunately, [JSON-LD's spec references the JS spec here](https://www.w3.org/TR/json-ld/#the-rdf-json-datatype):\r\n> The value space\r\n> is the union of the four primitive types (strings, numbers, booleans, and null) and two structured types (objects and arrays) from [ECMASCRIPT]. \r\n\r\nI'm not a fan of this definition (as the standard JSON does not have any formal ties to ECMAScript), but it's there, and rdf:JSON is bound to both standard JSON (for the syntax) and the ECMAScript interpretation (for the value)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-574383509"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> <http://schema.org/startDate> "2020-01-14T21:31:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/574383509> <http://schema.org/description> "> Unfortunately, JSON-LD's spec references the JS spec here\r\n\r\nOh my, you are right.\r\n\r\n> I'm not a fan of this definition (as the standard JSON does not have any formal ties to ECMAScript)\r\n\r\nWell, the standard JSON is only concerned about syntax, hence the lexical space. We need to go beyond it to define the value space..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575701168"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> <http://schema.org/startDate> "2020-01-17T16:38:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575701168> <http://schema.org/description> "My feeling is that what is in the current spec is indeed erroneous, mixing the datatypes...\r\n\r\nrdf:HTML defines the [value space](https://www.w3.org/TR/rdf11-concepts/#section-html) in terms of the DOM, because the DOM, well, exists. As there is nothing comparable for JSON, the only clean way of doing it is that the value space for rdf:JSON are strings that abide to the requirements of the JSON syntax. It looks like a circular definition, but it is not really; we clearly define what the equivalence is for those strings and that is all that, in my view, RDF can do..." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575738245"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> <http://schema.org/startDate> "2020-01-17T18:19:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575738245> <http://schema.org/description> "> My feeling is that what is in the current spec is indeed erroneous, mixing the datatypes...\r\n> \r\n> rdf:HTML defines the [value space](https://www.w3.org/TR/rdf11-concepts/#section-html) in terms of the DOM, because the DOM, well, exists. As there is nothing comparable for JSON, the only clean way of doing it is that the value space for rdf:JSON are strings that abide to the requirements of the JSON syntax. It looks like a circular definition, but it is not really; we clearly define what the equivalence is for those strings and that is all that, in my view, RDF can do...\r\n\r\nThis sounds cool, but this way differently formatted equivalent JSON documents would be treated as a different values - which is a problem that [JSON canonicalization](https://datatracker.ietf.org/doc/draft-rundgren-json-canonicalization-scheme/) is trying to solve. Still, right now the JSON canonicalization is just a draft, and other specs - [like JWT](https://tools.ietf.org/html/rfc7519#section-3) - don't really care about it, they just treat the whole JSON object as a string, with formatting and all included." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575888036"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> <http://schema.org/startDate> "2020-01-18T10:56:48Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888036> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-01-17-json-ld#section2).\r\n\r\n- `RESOLVED:  Change the definition of the value space of rdf:JSON datatype to remove the reference to the internal datatypes and replace with a string which is the canonical form of the serialization of the JSON`\r\n- `RESOLVED:  Above resolution is a significant change, and that we will need to re-start CR. Re-publication would when current commenters issues have been addressed.`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nSyntax #323<br/>\r\nRob Sanderson: link: <a href=\"https://github.com/w3c/json-ld-syntax/issues/323\">https://github.com/w3c/json-ld-syntax/issues/323</a><br/>\r\nIvan Herman: This is really pchampin’s area, but there is a problem with how we define the JSON datatype (value space) is that we convert the JSON text into a datatypes defined in XSD and are used in RDF.<br/>\r\n… There are some funny situations that come up, where for example “1”^^rdf:JSON and “1”^^xsd:integer are the same, which is wrong.<br/>\r\n… THe rdf:HTML datatype uses the DOM, which doesn’t revert to primitive types. We don’t have anything like that in JSON land.<br/>\r\n… I think the only correct way to do it is to say that the value space is a JSON string. This seems odd, but really it’s just a JSON string per the spec.<br/>\r\n… Then we have a way to compare two values, as defined by JSON. We do indeed have a mixture of data in JSON for which we have no control.<br/>\r\n… I think that such a change might be substantial and we’d need to go through a more formal CR update.<br/>\r\nPierre-Antoine Champin: I agree with ivan; I’m not sure we can take your solution, as the JSON RFC may not describe the semantics of equality.<br/>\r\nIvan Herman: We do have in our space a way to compare two JSON literals.<br/>\r\nPierre-Antoine Champin: We had to do this because the RFC doesn’t. The most natural thing was to refer to other types. Hence the confusion.<br/>\r\nIvan Herman: The comparison process goes into converting to the internal representation for comparison. Otherwise, the value space is a string.<br/>\r\nRob Sanderson: The question is whether “1”^^xsd:integer === “1”^^rdf:json ?<br/>\r\nIvan Herman: The way we define the value space is sort of a union of integers, booleans and and so forth. That’s wrong.<br/>\r\nRob Sanderson: There is no expectation that the syntax of the JSON is comparable to the semantics of other datatypes. You don’t need to understand that “true” is a valid boolean in JSON to implement the rdf:JSON datatype.<br/>\r\nPierre-Antoine Champin: I didn’t think it was “wrong”, but it opens a Pandora’s block regarding other specs. It could be expected that OWL processors recognize this value, which could be a problem.<br/>\r\n… There might be issues with numbers which might make it actually wrong, as numbers are not very clear.<br/>\r\nDave Longley: +1<br/>\r\nRob Sanderson: +1 to Ivan<br/>\r\nDave Longley: +1 rdf:JSON is opaque<br/>\r\nBenjamin Young: +1<br/>\r\nIvan Herman: The whole reason we went into this is because we want some portion of the JSON-LD to be opaque for RDF processing; our intention was that, but by turning it into an active datatype, we do something that wasn’t intended.<br/>\r\nGregg Kellogg: I’ll echo ivan’s point. Point was not to make a literal that should be compared with other things, but is simply JSON<br/>\r\nDave Longley: just a way for JSON to travel in RDF<br/>\r\nGregg Kellogg: because of normalization, which is not normative, every processor would create the same literal representation. Should have said that the value space is the string representing that serialization<br/>\r\n… and to compare as strings.<br/>\r\nDave Longley: +1 to ivan<br/>\r\nIvan Herman: In an ideal world where there was a canonical JSON spec, we could say that the value space is a canonical version of the JSON serialization.<br/>\r\nDave Longley: +1 to “value space is a canonical version of the JSON serialization”<br/>\r\nIvan Herman: We do define a canonicalization.<br/>\r\n… Then we could be a bit more precise based on our C14N description.<br/>\r\nProposed resolution: Change the definition of the value space of rdf:JSON datatype to remove the reference to the internal datatypes and replace with a string which is the canonical form of the serialization of the JSON (Rob Sanderson)<br/>\r\nDave Longley: Seems like the right thing to do to me.<br/>\r\nDave Longley: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nIvan Herman: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nRob Sanderson: +1<br/>\r\nBenjamin Young: +1<br/>\r\nResolution #2: Change the definition of the value space of rdf:JSON datatype to remove the reference to the internal datatypes and replace with a string which is the canonical form of the serialization of the JSON<br/>\r\nRob Sanderson: This is normative text that changes how the datatype is defined/interpreted, I’d have a hard time arguing that it’s an editorial issue.<br/>\r\nPierre-Antoine Champin: As we’re nit-picking, we should not define it as a subset of xsd:string representations, but as a separate value space.<br/>\r\nRob Sanderson: +1<br/>\r\nIvan Herman: I wasn’t suggesting we republish now.<br/>\r\nRob Sanderson: But, we do think it’s significant enough to re-enter CR.<br/>\r\nIvan Herman: What gkellogg said, when kasei has “finished”, we can do a republication.<br/>\r\nProposed resolution: Above resolution is a significant change, and that we will need to re-start CR. Re-publication would when current commenters issues have been addressed. (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nIvan Herman: +1<br/>\r\nDave Longley: +1<br/>\r\nRob Sanderson: kasei is using PERL to start with, and will port to a more modern language later.<br/>\r\nBenjamin Young: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nTim Cole: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nResolution #3: Above resolution is a significant change, and that we will need to re-start CR. Re-publication would when current commenters issues have been addressed.<br/>\r\nIvan Herman: Is there a minimum period of implementation? Do we have to delay based on that limitation?<br/>\r\nDave Longley: i think you can do a really short CR, especially if changes are not significant<br/>\r\nRob Sanderson: From process 2019:<br/>\r\nRob Sanderson: > Revising a Candidate Recommendation … must specify the deadline for further comments, which must be at least 28 days after publication, and should be longer for complex documents,<br/>\r\nRob Sanderson: <a href=\"https://www.w3.org/2019/Process-20190301/#revised-cr\">https://www.w3.org/2019/Process-20190301/#revised-cr</a><br/>\r\nIvan Herman: 28 days is not that bad. Our original deadline was end-of-February.<br/>\r\n… We’d need to postpone the deadline until mid-March if we miss that.<br/>\r\n… We’re still well within our window.<br/>\r\n… We could, in theory, republish syntax without API, but probably best until review is finished.<br/>\r\nRob Sanderson: We can probably consolidate our changes into something simpler.<br/>\r\nIvan Herman: Let’s make them clean.<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575888128"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> <http://schema.org/startDate> "2020-01-18T10:58:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575888128> <http://schema.org/description> "@LEW21 see the comment above (or the [meeting minutes](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-01-17-json-ld#section2)). The current spec, in effect, does include a definition of canonicalization, so the value space being the set of canonicalized JSON texts seems to be fine." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575949750"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> .
<https://api.github.com/users/LEW21> <http://schema.org/accountId> "LEW21" .
<https://api.github.com/users/LEW21> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/9737?v=4" .
<https://api.github.com/users/LEW21> <http://schema.org/url> "https://github.com/LEW21"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/LEW21> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> <http://schema.org/creator> <https://api.github.com/users/LEW21> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> <http://schema.org/startDate> "2020-01-19T00:00:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575949750> <http://schema.org/description> "I agree, that it's better to use canonicalized JSON instead of JS object model as the value space here.\r\n\r\nHowever, I think treating the strings **as-written** might be even better:\r\n\r\n## 1. JSC is a draft\r\n[JSON Canonicalization Scheme](https://tools.ietf.org/html/draft-rundgren-json-canonicalization-scheme-16) (JSC) is still a draft, so it can't be referenced normatively. It's still getting a new version every month. While I'm not proficient in understanding the IETF process, it doesn't look like it's going to become a standard soon.\r\n\r\n## 2. JSC - Serialization of Numbers\r\nJSC relies on the JavaScript implementation of Numbers. This is not based on the JSON standard, but their own decision - as the JSON standard does not enforce, or even recommend, any particular implementation of Numbers. And there are people that use JSON with non-JS-compatible Numbers. It's not a good practice, but as long as it's not disallowed by the JSON spec, it should be supported.\r\n\r\n## 3. JSC - Sorting of Object Properties\r\nJSC specifies that object properties have to be sorted - because JSON says they are unordered. In practice, there is a growing number of people who are using them in a ordered way.\r\n* While undefined behavior in ECMAScript, in the popular web browser JS engines - objects are ordered - and this order is preserved when using `JSON.parse` and `JSON.stringify`.\r\n* Since Python 3.6, dicts are ordered; and since 3.7 this is a part of Python standard - and both `json.load` and `json.dump` preserve this order.\r\n* People writing web APIs commonly return their objects with keys sorted in the \"most readable way\".\r\n* There are specs, like JSON Schema and OpenAPI, that use JSON objects to store a map of properties, which - while functionally unordered - is interpreted in an ordered way by documentation generators (so that schema authors can sort the properties in the most readable way, and have the documentation follow this order).\r\n* There are probably also other cases where people need ordered dicts, and serialize/unserialize them in JSON as objects, without even knowing that it's undefined behavior - because it just works, and seems natural.\r\n\r\nI think that at some point the JSON spec will have to be amended to acknowledge this practice.\r\n\r\n## 4. Compatibility with JWT\r\n[JWT](https://tools.ietf.org/html/rfc7519) was standarized before the JSC work has started. It says that:\r\n> This JSON object MAY contain whitespace and/or line breaks before or after any JSON values or structural characters, in accordance with Section 2 of RFC 7159 [RFC7159].\r\n\r\nSo it simply preserves whatever was thrown at it by the user. This \"whatever\" is then signed. So - if somebody would want to store both the JSON payload and the signature in an RDF database, in separate properties - he would need the payload to remain intact. He would probably like to tag the payload as JSON, but - if rdf:JSON depends on canonicalization - that would break in some cases (unfortunately not all, so it's possible he wouldn't even notice it until it gets on production).\r\n\r\n----\r\n\r\nStill, canonicalization of course has its uses. It's nice to be able to parse the object, and then serialize it, and have the result be the same value. So - it might be a good idea to *recommend* using the canonical form (or at least a whitespace-less form, because these are discarded by all the JSON parsers+serializers) in the lexical space. While such recommendation wouldn't work for example for numbers, which are commonly written by hand - JSON values are usually produced by software, so the generators could be programmed to generate as-canonical-as-possible output. And - if somebody needs something that's not supported by JCS, or some other way to canonicalize JSON is standarized in the future - you're safe, everything still works." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-575970974"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> <http://schema.org/startDate> "2020-01-19T06:08:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/575970974> <http://schema.org/description> "@LEW21,\r\n\r\n> JSON Canonicalization Scheme (JSC) is still a draft, so it can't be referenced normatively. It's still getting a new version every month. While I'm not proficient in understanding the IETF process, it doesn't look like it's going to become a standard soon.\r\n\r\nYou are absolutely right. It is a draft, who knows where it goes, and we cannot rely on it in the spec. As I said, we were forced to use our own definition which is [in the spec](https://www.w3.org/TR/2019/CR-json-ld11-20191212/#the-rdf-json-datatype), see the entry on \"The canonical mapping\". See also the note after this: *if* (and when...) the JSC is indeed a standard, future versions of this spec may be adapted. But, at this moment, this WG has no other choice than to has its own canonicalization rules." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325#issuecomment-578186950"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> <http://schema.org/startDate> "2020-01-24T15:51:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578186950> <http://schema.org/description> "> As a consequence, the corresponding text in API 8.6 Data Round Tripping is states:\r\n>\r\n>> The canonical lexical form of a JSON literal value is non-normative,\r\n>\r\n> and still uses SHOULD. I guess we should update it as well?\r\n\r\nYes. But I would simplify the whole portion of the text related to the JSON literal: let us not repeat the canonicalization algorithm (although we do not use the term 'canonicalization' in the new version of the syntax:-), but just refer to the value space of the JSON Literal, as defined in the syntax document. The value space being valid JSON, that should be somehow enough for the round tripping: a value in the value space is also a valid lexical form for the JSON part.\r\n\r\n(Yes, this means that there is no roundripping for JSON literals in the sense of keeping the original key order, spaces, indentation, etc. Let it be...)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325#issuecomment-578187286"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> <http://schema.org/startDate> "2020-01-24T15:52:00Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578187286> <http://schema.org/description> "(I wonder why github replicated my comment three times...)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325#issuecomment-578199220"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> <http://schema.org/startDate> "2020-01-24T16:21:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578199220> <http://schema.org/description> "@iherman \r\n> I believe that the lexical-to-value mapping section must be changed as well.\r\n\r\nIt was changed... and it does reference the constraints described in the definition of the value space. \r\n\r\n> (I wonder why github replicated my comment three times...)\r\n\r\nIt didn't, at least from where I stand." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/325#issuecomment-578240131"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/325> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> <http://schema.org/startDate> "2020-01-24T18:12:10Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240131> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-01-24-json-ld.html#section3-2).\r\n\r\n- `RESOLVED:  Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (modulo key ordering)`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nBoolean comparison issue (JSON Datatype)<br/>\r\n<b>link:</b> <a href=\"https://github.com/w3c/json-ld-syntax/issues/323))\">https://github.com/w3c/json-ld-syntax/issues/323))</a><br/>\r\nRob Sanderson: Last week, we concluded that we should fix 323.<br/>\r\nPierre-Antoine Champin: The value of the JSON value type should not be a structured representation of JS object, but canonical form of JSON representation.<br/>\r\n… We have our own canonic process. But this was marked as non-normative. I think this should be marked as normative.<br/>\r\nIvan Herman: Yes, I agree.<br/>\r\n… You avoided canonicalization term, which is a good idea.<br/>\r\n<b>pr:</b> <a href=\"https://github.com/w3c/json-ld-syntax/pull/325\">https://github.com/w3c/json-ld-syntax/pull/325</a><br/>\r\n… There is a small part that needs to be changed.<br/>\r\nPierre-Antoine Champin: I did change it.<br/>\r\nIvan Herman: I may have missed something then.<br/>\r\nPierre-Antoine Champin: Currently lexical value should be re-serialized.<br/>\r\nGregg Kellogg: Reason it was non-normative was JSC was still in draft.<br/>\r\n… Object keys are ordered by converting them by UTF16 may be controversial.<br/>\r\nPierre-Antoine Champin: We should update the API doc as a copy of the normalization text in processing document.<br/>\r\nGregg Kellogg: We should also change the test descriptions.<br/>\r\nIvan Herman: Also the API doc currently repeats the canonicalization steps, and we should refer to the proper place.<br/>\r\n… We will get a similar situation as with language tags, where we can not fully guarantee roundtripping.<br/>\r\nGregg Kellogg: Yes. Ordering of keys in our case is just lexicographical, while JSC is much more detailed with localization concerns.<br/>\r\nProposed resolution: Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (Rob Sanderson)<br/>\r\nGregg Kellogg: Not including that in syntax doc would not be sufficient for interoperation.<br/>\r\nGregg Kellogg: +1 (modulo key ordering)<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nGregg Kellogg: modulo key ordering<br/>\r\nDave Longley: +1 modulo gregg’s comments<br/>\r\nRob Sanderson: +1<br/>\r\nRuben Taelman: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1 modulo gregg’s comments<br/>\r\nIvan Herman: +1<br/>\r\nResolution #4: Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (modulo key ordering)<br/>\r\nDave Longley: (it is important to match JCS … and hope it sticks in the future)<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-578240234"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> <http://schema.org/startDate> "2020-01-24T18:12:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578240234> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-01-24-json-ld.html#section3-2).\r\n\r\n- `RESOLVED:  Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (modulo key ordering)`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nBoolean comparison issue (JSON Datatype)<br/>\r\n<b>link:</b> <a href=\"https://github.com/w3c/json-ld-syntax/issues/323))\">https://github.com/w3c/json-ld-syntax/issues/323))</a><br/>\r\nRob Sanderson: Last week, we concluded that we should fix 323.<br/>\r\nPierre-Antoine Champin: The value of the JSON value type should not be a structured representation of JS object, but canonical form of JSON representation.<br/>\r\n… We have our own canonic process. But this was marked as non-normative. I think this should be marked as normative.<br/>\r\nIvan Herman: Yes, I agree.<br/>\r\n… You avoided canonicalization term, which is a good idea.<br/>\r\n<b>pr:</b> <a href=\"https://github.com/w3c/json-ld-syntax/pull/325\">https://github.com/w3c/json-ld-syntax/pull/325</a><br/>\r\n… There is a small part that needs to be changed.<br/>\r\nPierre-Antoine Champin: I did change it.<br/>\r\nIvan Herman: I may have missed something then.<br/>\r\nPierre-Antoine Champin: Currently lexical value should be re-serialized.<br/>\r\nGregg Kellogg: Reason it was non-normative was JSC was still in draft.<br/>\r\n… Object keys are ordered by converting them by UTF16 may be controversial.<br/>\r\nPierre-Antoine Champin: We should update the API doc as a copy of the normalization text in processing document.<br/>\r\nGregg Kellogg: We should also change the test descriptions.<br/>\r\nIvan Herman: Also the API doc currently repeats the canonicalization steps, and we should refer to the proper place.<br/>\r\n… We will get a similar situation as with language tags, where we can not fully guarantee roundtripping.<br/>\r\nGregg Kellogg: Yes. Ordering of keys in our case is just lexicographical, while JSC is much more detailed with localization concerns.<br/>\r\nProposed resolution: Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (Rob Sanderson)<br/>\r\nGregg Kellogg: Not including that in syntax doc would not be sufficient for interoperation.<br/>\r\nGregg Kellogg: +1 (modulo key ordering)<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nGregg Kellogg: modulo key ordering<br/>\r\nDave Longley: +1 modulo gregg’s comments<br/>\r\nRob Sanderson: +1<br/>\r\nRuben Taelman: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nAdam Soroka: +1<br/>\r\nBenjamin Young: +1 modulo gregg’s comments<br/>\r\nIvan Herman: +1<br/>\r\nResolution #4: Update api document to be in line with syntax for json datatype, test descriptions, and “canonicalization” algorithm (modulo key ordering)<br/>\r\nDave Longley: (it is important to match JCS … and hope it sticks in the future)<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/323#issuecomment-578445126"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/323> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> <http://schema.org/startDate> "2020-01-25T21:36:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/578445126> <http://schema.org/description> "@LEW21 can you please indicate if this satisfies your concern?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/328#issuecomment-584852146"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/accountId> "michaelcpuckett" .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/1172424?v=4" .
<https://api.github.com/users/michaelcpuckett> <http://schema.org/url> "https://github.com/michaelcpuckett"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/michaelcpuckett> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> <http://schema.org/creator> <https://api.github.com/users/michaelcpuckett> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> <http://schema.org/startDate> "2020-02-11T21:06:57Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584852146> <http://schema.org/description> "Hi, I have an idea for a new feature. I see there is a feature freeze for 1.1 but do not know how to submit a feature for 1.2\r\n\r\nI am working with W3C's SHACL and there can be deeply nested nodes and properties. Each sh:node is a sh:NodeShape and each sh:property is a sh:PropertyShape, and it gets very repetitive to write out those `@type`s each time.\r\n\r\nI would like to be able to define a default `@type` for entities in the @context of a regular JSON-LD document, using the `@default` keyword. The default would be applied no matter how deeply nested.\r\n\r\nI have read a discussion before that JSON-LD core syntax is not for adding information, because that is only for framing. But I hope that can be reconsidered. In my opinion this is not adding, just rearranging, since the information is provided in the @context.\r\n\r\n(If this is impossible in the core syntax, even in a future 1.2 version, then perhaps there could be modifications made to framing to model infinite nesting.)\r\n\r\nHere's an example in 1.1 syntax:\r\n\r\n```json\r\n{\r\n    \"@context\": {\r\n        \"schema\": \"http://schema.org/\",\r\n        \"sh\": \"https://www.w3.org/TR/shacl/\",\r\n        \"path\": {\r\n            \"@id\": \"sh:path\",\r\n            \"@type\": \"@id\"\r\n        },\r\n        \"class\": {\r\n            \"@id\": \"sh:class\",\r\n            \"@type\": \"@id\"\r\n        },\r\n        \"property\": \"sh:property\",\r\n        \"node\": \"sh:node\"\r\n    },\r\n    \"@type\": \"sh:NodeShape\",\r\n    \"class\": \"schema:Article\",\r\n    \"property\": [{\r\n        \"@type\": \"sh:PropertyShape\",\r\n        \"path\": \"schema:author\"\r\n    }, {\r\n        \"@type\": \"sh:PropertyShape\",\r\n        \"path\": \"schema:headline\"\r\n    }, {\r\n        \"@type\": \"sh:PropertyShape\",\r\n        \"path\": \"schema:interactionStatistic\",\r\n        \"node\": {\r\n            \"@type\": \"sh:NodeShape\",\r\n            \"class\": \"schema:InteractionCounter\",\r\n            \"property\": [{\r\n                \"@type\": \"PropertyShape\",\r\n                \"path\": \"schema:userInteractionCount\"\r\n            }, {\r\n                \"@type\": \"PropertyShape\",\r\n                \"path\": \"schema:interactionType\",\r\n                \"node\": {\r\n                    \"class\": \"schema:CommentAction\"\r\n                }\r\n            }]\r\n        }\r\n    }]\r\n}\r\n```\r\n\r\nAnd below would be my preferred syntax, with `@default` values provided in the @context.\r\n\r\n```json\r\n{\r\n    \"@context\": {\r\n        \"schema\": \"http://schema.org/\",\r\n        \"sh\": \"https://www.w3.org/TR/shacl/\",\r\n        \"path\": {\r\n            \"@id\": \"sh:path\",\r\n            \"@type\": \"@id\"\r\n        },\r\n        \"class\": {\r\n            \"@id\": \"sh:class\",\r\n            \"@type\": \"@id\"\r\n        },\r\n        \"property\": {\r\n            \"@id\": \"sh:property\",\r\n            \"@type\": \"sh:class\",\r\n            \"@default\": {\r\n                \"@type\": \"sh:PropertyShape\"\r\n            }\r\n        },\r\n        \"node\": {\r\n            \"@id\": \"sh:node\",\r\n            \"@type\": \"sh:path\",\r\n            \"@default\": {\r\n                \"@type\": \"sh:NodeShape\"\r\n            }\r\n        }\r\n    },\r\n    \"@type\": \"sh:NodeShape\",\r\n    \"class\": \"schema:Article\",\r\n    \"property\": [\r\n        \"schema:author\",\r\n        \"schema:headline\", {\r\n            \"path\": \"schema:interactionStatistic\",\r\n            \"node\": {\r\n                \"class\": \"schema:InteractionCounter\",\r\n                \"property\": [\r\n                    \"schema:userInteractionCount\", {\r\n                        \"path\": \"schema:interactionType\",\r\n                        \"node\": \"schema:CommentAction\"\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/328#issuecomment-584885458"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/328> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> <http://schema.org/startDate> "2020-02-11T22:22:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/584885458> <http://schema.org/description> "This was considered in #76 and rejected as being out of scope. It certainly can be reconsidered in the future, as it is an often featured request. The solution for adding information to graphs is to use framing. See, [example 23](https://www.w3.org/TR/json-ld11-framing/#sample-library-frame-with-default-type) which speaks to this specific use case." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-585446418"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> <http://schema.org/startDate> "2020-02-12T22:18:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585446418> <http://schema.org/description> "Given continued discussion on SRI, and with `@import`, one design might be the following:\r\n\r\n```json\r\n{\r\n  \"@context\":  {\r\n    \"@version\": 1.1,\r\n    \"@import\": \"https://example.com/context-with-metadata\",\r\n    \"@sri\": \"sha256-abcd\",\r\n    \"@protected\": true\r\n  }\r\n}\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-585448583"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> <http://schema.org/startDate> "2020-02-12T22:24:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585448583> <http://schema.org/description> "I think we need to stick to the feature freeze and focus on clearing up the algorithm and `@json` datatype definition that caused the re-entry to CR to be necessary.\r\n\r\nWe have put the framework in place for the above with `@import`, and the details can be done in a future release.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-585460674"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> <http://schema.org/startDate> "2020-02-12T22:57:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/585460674> <http://schema.org/description> "I was only documenting recent design discussions, not suggesting to add a feature for 1.1. It may be useful to have this outline for a hypothetical 1.2 release, or for the CG to munch on." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/108#issuecomment-586407636"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/108> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> <http://schema.org/startDate> "2020-02-14T18:16:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407636> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-02-14-json-ld#section3-1).\r\n\r\n- `RESOLVED:  Continue to defer work on context metadata (syntax #108)`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n3.1. Integrity feature disposal<br/>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-syntax/issues/108\">https://github.com/w3c/json-ld-syntax/issues/108</a><br/>\r\nRob Sanderson: from someone on the mailing list working on Ethereum<br/>\r\n… interested in SRI<br/>\r\n… gkellogg pointed out that we have deferred this,<br/>\r\n… but that the <code>@import</code> mechanism offers an extension point.<br/>\r\nGregg Kellogg: did he raised a different issue, which I referenced in 108?<br/>\r\nRob Sanderson: this was an email on the list.<br/>\r\n… does anyone feel differently, or should we keep it deferred?<br/>\r\nIvan Herman: that’s the only thing that we can do now.<br/>\r\nProposed resolution: Continue to defer work on context metadata (syntax #108) (Rob Sanderson)<br/>\r\nRob Sanderson: +1<br/>\r\nGregg Kellogg: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nTim Cole: +1<br/>\r\nJeff Mixter: +1<br/>\r\nHarold Solbrig: +1<br/>\r\nResolution #3: Continue to defer work on context metadata (syntax #108)<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-586407929"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> <http://schema.org/startDate> "2020-02-14T18:17:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/586407929> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-02-14-json-ld#section3-2).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-syntax/issues/329\">https://github.com/w3c/json-ld-syntax/issues/329</a><br/>\r\nHarold Solbrig: I have a number of prefixes ending with underscore,<br/>\r\n… rather than hash or slash (so not considered as prefix by default);<br/>\r\n… it would be nice to be able to set <code>@prefix=true</code> globally,<br/>\r\n… instead of specifying per term.<br/>\r\nRob Sanderson: would that apply to all terms in the context?<br/>\r\nGregg Kellogg: this would apply to all terms except those explicitly marked with <code>@prefix=false</code><br/>\r\n… and this would be meant to be used in subcontexts.<br/>\r\nHarold Solbrig: the ramifications are big…<br/>\r\nGregg Kellogg: this is actually what 1.0 was doing initially;<br/>\r\n… there was an errata to prevent just any IRI to be used as a prefix<br/>\r\nGregg Kellogg: See errata mail<br/>\r\nGregg Kellogg: See JSON-LD 1.0 errata<br/>\r\nHarold Solbrig: let me time to ponder on it a little more<br/>\r\nRob Sanderson: gkellogg any more issues we should discuss?<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-587045844"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> <http://schema.org/startDate> "2020-02-17T15:28:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587045844> <http://schema.org/description> "Just to double check - in JSON-LD 1.0, there is no way to make the following work:\r\n\r\n```\r\n{   \"@context\": {\r\n          \"CHEBI\": \"http://example.org/CHEBI_\"\r\n     },\r\n    \"CHEBI:item1\": true\r\n}\r\n```\r\nSee: http://tinyurl.com/tn8k2fd\r\n\r\nWhile I'm thinking of it, is it expected behavior that the above emits a triple while\r\n\r\nhttp://tinyurl.com/w5qdz4c\r\n\r\nDoes not?\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-587056304"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> <http://schema.org/startDate> "2020-02-17T15:53:06Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587056304> <http://schema.org/description> "In general, can someone verify that ALL of the behaviors below conform to the spec?\r\n\r\nhttp://tinyurl.com/wwl2yk2" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-587130578"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> <http://schema.org/startDate> "2020-02-17T19:29:46Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587130578> <http://schema.org/description> "> Just to double check - in JSON-LD 1.0, there is no way to make the following work:\r\n> \r\n> ```\r\n> {   \"@context\": {\r\n>           \"CHEBI\": \"http://example.org/CHEBI_\"\r\n>      },\r\n>     \"CHEBI:item1\": true\r\n> }\r\n> ```\r\n\r\nYes, in the updated JSON-LD 1.0 (after errata), CHEBI won't be usable as a prefix, so it is treated as an IRI scheme.\r\n\r\n> See: http://tinyurl.com/tn8k2fd\r\n> \r\n> While I'm thinking of it, is it expected behavior that the above emits a triple while\r\n> \r\n> http://tinyurl.com/w5qdz4c\r\n> \r\n> Does not?\r\n\r\nThis does not emit a triple (or expand), as \"item1\" is not a defined property. If you used `@vocab` as a catch-all to define it, it would create a triple.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-587131337"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> <http://schema.org/startDate> "2020-02-17T19:32:29Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587131337> <http://schema.org/description> "> In general, can someone verify that ALL of the behaviors below conform to the spec?\r\n> \r\n> http://tinyurl.com/wwl2yk2\r\n\r\nThose seem correct. P1-6 all are defined using IRIs and the x:item? properties all have the form of an IRI (with scheme `x`)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-587682604"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> <http://schema.org/startDate> "2020-02-18T19:12:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/587682604> <http://schema.org/description> "We definitely need this fix.  The problem we face is that the [prefixcommons](https://github.com/prefixcommons) library uses JSON-LD contexts both as raw JSON maps and in rdflib json-ld parsers.  See: https://github.com/biolink/biolinkml/blob/master/notebooks/context_issue.ipynb for a description of the details.\r\n\r\nThe prefixcommons library, which has widespread use in the bioinformatics community, has a significant number of prefixes that do not end in '/' or '#'.  Based on the above responses, our options using JSON-LD 1.0 are quite limited, and we will probably end up patching rdflib-jsonld to reverse  https://lists.w3.org/Archives/Public/public-rdf-comments/2018Jan/0002.html with our fingers crossed that issue it fixes doesn't appear in any of our target JSON.\r\n\r\nIn the longer (JSON-LD 1.1) term, we would like to be able to _import_ the existing contexts, adding a global `\"@prefix\": true`, as the per-prefix fix simply won't work." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-589088843"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> .
<https://api.github.com/users/niklasl> <http://schema.org/accountId> "niklasl" .
<https://api.github.com/users/niklasl> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/29803?v=4" .
<https://api.github.com/users/niklasl> <http://schema.org/url> "https://github.com/niklasl"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/niklasl> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> <http://schema.org/creator> <https://api.github.com/users/niklasl> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> <http://schema.org/startDate> "2020-02-20T14:51:01Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589088843> <http://schema.org/description> "@hsolbrig  would the form suggested in https://github.com/w3c/json-ld-api/issues/76#issuecomment-582650517 work for you? That is, this:\r\n\r\n```json\r\n{\r\n  \"@context\": {\r\n    \"@prefix\": {\r\n        \"dc\": \"http://purl.org/dc/terms/\",\r\n        \"tag\": \"tag:example.org,2020:ns:\",\r\n        \"compact-iris\": \"http://example.com/compact-iris-\"\r\n    }\r\n  },\r\n}\r\n```\r\n\r\nIt'd require a slight change in usage, but that form is usable as a simple raw JSON dictionary." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-589145601"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> <http://schema.org/startDate> "2020-02-20T15:44:23Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589145601> <http://schema.org/description> "I've put a query out to the prefixcommons community -- hoping to hear back soon.  I like where it is going but it does have some interesting ramifications." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-589216620"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> .
<https://api.github.com/users/cmungall> <http://schema.org/accountId> "cmungall" .
<https://api.github.com/users/cmungall> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/50745?v=4" .
<https://api.github.com/users/cmungall> <http://schema.org/url> "https://github.com/cmungall"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/cmungall> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> <http://schema.org/creator> <https://api.github.com/users/cmungall> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> <http://schema.org/startDate> "2020-02-20T17:35:53Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589216620> <http://schema.org/description> "Hello all, I represent the Open Bio Ontologies (OBO) Foundry (http://obofoundry.org) which is the leading collection of ontologies in biomedicine and the life sciences. \r\n\r\nAll OBOs use PURLs of the form http://purl.obolibrary.org/obo/$NAMESPACE_$LOCALID, for which we have canonical CURIEs of the form $NAMESPACE:$LOCALID. A lot of our stack has been using JSON-LD contexts (which we love) with mappings of the form\r\n\r\n     \"NAMESPACE\":  http://purl.obolibrary.org/obo//NAMESPACE_\"\r\n\r\nThis has been largely working but I guess this is not following the standard and it is not robust to rely on this behavior?\r\n\r\nI would be very much in favor of technical solutions that don't bake in assumptions about the syntactic structure of URIs, which should be opaque to software." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-589231823"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> .
<https://api.github.com/users/wdduncan> <http://schema.org/accountId> "wdduncan" .
<https://api.github.com/users/wdduncan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/3186638?v=4" .
<https://api.github.com/users/wdduncan> <http://schema.org/url> "https://github.com/wdduncan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/wdduncan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> <http://schema.org/creator> <https://api.github.com/users/wdduncan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> <http://schema.org/startDate> "2020-02-20T18:10:37Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589231823> <http://schema.org/description> "The NAMESPACE_ prefix works fine in the JSON-LD 1.0 playground. What changed?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-589234643"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> <http://schema.org/startDate> "2020-02-20T18:16:32Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/589234643> <http://schema.org/description> "While I'd like to discuss the above approach as it would make some of the contexts we are generating more readable,  the ideal solution for the prefixcommons community would be to have an API flag that says \"treat everything as a prefix\".  That would allow code that reads contexts as JSON to work unchanged and would require minimal changes to the API calls once the 1.1 software is in place" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/332#issuecomment-590962432"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> <http://schema.org/startDate> "2020-02-25T16:58:40Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590962432> <http://schema.org/description> "Should be `@proteced`; we may have gone back and for on this, or I may have just had some confusion." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/332#issuecomment-590983215"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> <http://schema.org/startDate> "2020-02-25T17:40:28Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590983215> <http://schema.org/description> "No, I take that back, `@preserve` is a framing keyword, used internally to preserve values that might be lost in compaction (e.g., `null`). It is not available for users, but just used internally.\r\n\r\nPerhaps some expansion in the framing document on the use of `@preserve` within the [Default Content](https://w3c.github.io/json-ld-framing/#default-content) section." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/333#issuecomment-590991362"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/333> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/accountId> "dependabot[bot]" .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/image> "https://avatars0.githubusercontent.com/in/29110?v=4" .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://schema.org/url> "https://github.com/apps/dependabot"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dependabot%5Bbot%5D> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#Bot> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> <http://schema.org/creator> <https://api.github.com/users/dependabot%5Bbot%5D> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> <http://schema.org/startDate> "2020-02-25T18:12:54Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> <http://example.com/ns#authorAssociation> "CONTRIBUTOR" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/590991362> <http://schema.org/description> "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-592081607"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> .
<https://api.github.com/users/wdduncan> <http://schema.org/accountId> "wdduncan" .
<https://api.github.com/users/wdduncan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/3186638?v=4" .
<https://api.github.com/users/wdduncan> <http://schema.org/url> "https://github.com/wdduncan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/wdduncan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> <http://schema.org/creator> <https://api.github.com/users/wdduncan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> <http://schema.org/startDate> "2020-02-27T17:30:15Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592081607> <http://schema.org/description> "Interestingly, in LD 1.1, using the \"@id\" designator does not always work as expected when using \"#\".    \r\nFor example:\r\n```\r\n{\r\n  \"@context\":\r\n  {\r\n    \"foo\": \"http://ex.com/foo#\",\r\n    \"bar\": {\r\n      \"@id\": \"http://ex.com/bar#\"\r\n    }\r\n  },\r\n  \"foo:123\": \"baz\",\r\n  \"bar:456\": \"blah\"\r\n}\r\n```\r\nyields the following triples:\r\n```\r\n_:b0 <bar:456> \"blah\" . <---- expected <http://ex.com/bar#456>\r\n_:b0 <http://ex.com/foo#123> \"baz\" .\r\n```\r\nBut in LD 1.0, it yields:\r\n```\r\n_:b0 <http://ex.com/bar#456> \"blah\" . <----- works as expected\r\n_:b0 <http://ex.com/foo#123> \"baz\" .\r\n```\r\nwhich is what you expect.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-592090824"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> <http://schema.org/startDate> "2020-02-27T17:50:22Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592090824> <http://schema.org/description> "That's right, [simple term definitions](https://w3c.github.io/json-ld-syntax/#dfn-simple-term-definition) and [expanded term definitions](https://w3c.github.io/json-ld-syntax/#dfn-expanded-term-definition) behave differently regarding `@prefix`:\r\n\r\n* in expanded term definitions, `@prefix` defaults to `false` (but can be explicitly overriden),\r\n* in simple term definitions, the implicit `@prefix` value depends on the last character of the IRI.\r\n\r\nIIRC, the feeling of the WG was that the default value of `@prefix` should have always been false (hence the default for expanded term definitions). But on the other hand, JSON-LD 1.0 has set the expectation that simple term definitions could be used to define prefixes, hence the special case for simple term definitions.\r\n\r\nStandardization is about compromise :)" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-592110206"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> .
<https://api.github.com/users/wdduncan> <http://schema.org/accountId> "wdduncan" .
<https://api.github.com/users/wdduncan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/3186638?v=4" .
<https://api.github.com/users/wdduncan> <http://schema.org/url> "https://github.com/wdduncan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/wdduncan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> <http://schema.org/creator> <https://api.github.com/users/wdduncan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> <http://schema.org/startDate> "2020-02-27T18:33:18Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592110206> <http://schema.org/description> "@pchampin Thanks for the feed back!\r\nSetting the `@prefix` to `true` in an [expanded term definitions](https://w3c.github.io/json-ld-syntax/#dfn-expanded-term-definition) allows use of the underscore (\"_\") at the end IRIs, which is **very** important for the [OBO community](http://obofoundry.org/).  \r\n\r\nFor example:\r\n```\r\n{\r\n  \"@context\":\r\n  {\r\n    \"foo\": \"http://ex.com/foo#\",\r\n    \"bar\": {\r\n      \"@prefix\": true,\r\n      \"@id\": \"http://ex.com/bar_\"\r\n    }\r\n  },\r\n  \"foo:123\": \"baz\",\r\n  \"bar:456\": \"blah\"\r\n}\r\n```\r\nyields:\r\n```\r\n_:b0 <http://ex.com/bar_456> \"blah\" .\r\n_:b0 <http://ex.com/foo#123> \"baz\" .\r\n```\r\n\r\nIt would be nice to have a global way to set `@prefix` to `true`, rather than having to use expanded term definitions for all OBO IRIs. Any plans to make this possible?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/332#issuecomment-592203688"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> <http://schema.org/startDate> "2020-02-27T22:12:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592203688> <http://schema.org/description> "Editorial only?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/332#issuecomment-592253149"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/332> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> <http://schema.org/startDate> "2020-02-28T00:47:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592253149> <http://schema.org/description> "Framing didn’t require a new approval, as the changes were only Editorial. Syntax had a normative change, as did API, due to a change in how the JSON literal was defined.\n\nGregg Kellogg\ngregg@greggkellogg.net\n\n> On Feb 27, 2020, at 3:12 PM, Rob Sanderson <notifications@github.com> wrote:\n> \n> Editorial only?\n> \n> —\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub <https://github.com/w3c/json-ld-syntax/issues/332?email_source=notifications&email_token=AAALJWDNP7F23JFISQTK4BDRFA3FXA5CNFSM4K3DOQ4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENGE7KA#issuecomment-592203688>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAALJWAVNYAFYWZCRC2SKYTRFA3FXANCNFSM4K3DOQ4A>.\n> \n\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-592661314"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> <http://schema.org/startDate> "2020-02-28T18:23:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592661314> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-02-28-json-ld#section3-3).\r\n\r\n- `RESOLVED:  <code>@prefix</code> flag is a good idea, but a new feature that will be added to a future version with the hope that this will come quickly, given new W3C process options`\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\n<code>@prefix</code><br/>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-syntax/issues/329\">https://github.com/w3c/json-ld-syntax/issues/329</a><br/>\r\nHarold Solbrig: We talked about this last week.<br/>\r\n… There is a whole community out there that uses JSON-LD mainly for prefix mgmt.<br/>\r\n… Their prefixes are non-standard.<br/>\r\n… The <code>@prefix</code> feature we put in broke their stuff a while back, the only noticed recently when things started breaking.<br/>\r\n… This used to work in JSON-LD 1.0, but breaks in 1.1. Sometimes they treat it as regular JSON.<br/>\r\n… I suggested <code>@prefix</code> true in root making all terms prefixes.<br/>\r\n… We’re not going to get that one in without going back to WD.<br/>\r\n… Alternative solution, make it an API parameter to mark all terms as prefixes. Problem: this changes the semantics. But community would be happy with it.<br/>\r\n… Alternative 2: we can add _ (and possibly more characters) to gen-delim list.<br/>\r\n… We don’t want to loose this community.<br/>\r\nRob Sanderson: Should there be syntactic sugar to prefix? And what about backwards-compatibility with 1.0?<br/>\r\nGregg Kellogg: If you use an expanded term def without <code>@prefix</code> true, we don’t …<br/>\r\nRob Sanderson: We gave people the ability for people using non-gen-delim as last character a way to still force the term as a prefix.<br/>\r\n… The change is in the context, which no one would be processing as JSON?<br/>\r\nHarold Solbrig: Yes, they process the context as just JSON. Mainly for prefix-management.<br/>\r\nBenjamin Young: I don’t want to change the language to match the translation book.<br/>\r\n… We are seeing this pattern happening in other communities, where people are processing JSON-LD as JSON.<br/>\r\n… It’s a space we need to watch. People want a minimal set of tooling to work with contexts without going all into RDF land.<br/>\r\nHarold Solbrig: +1 on bigbluehat – folks are thinking about using context files as declarative mappings as well<br/>\r\nRob Sanderson: This looks to me like a new feature.<br/>\r\n… Unless we agree that this is something is broken, we shouldn’t go back to WD and go back again.<br/>\r\nHarold Solbrig: Are there any options I mentioned that doesn’t require us to go back to WD?<br/>\r\n… Can we just add the option? Or add something to the gen-delim list? Do these require going back to WD?<br/>\r\nRob Sanderson: Yes, it makes current tests invalid and changes behaviour.<br/>\r\nPierre-Antoine Champin: I agree that it would be a normative change. We could argue that we don’t change the intention. Would content-negotiation be an alternative option for this community?<br/>\r\n… Would not be possible if hosted on GitHub pages, which I think it is.<br/>\r\nHarold Solbrig: I’m scared of the outrage of JSON-LD being the URL police. They are reasonable, but we have to step in an be nice, because I’m scared that they will step away from JSON-LD if we can’t come up with something.<br/>\r\nGregg Kellogg: This is about terms, not URLs. For example, in Turtle prefix are unambiguous, but that’s not the case in JSON-LD. I’m sympathetic with what they are going through, but the WG has been open for a while, so they could/should have listened to what is going on.<br/>\r\nRob Sanderson: There is a solution that would make it work, which is to put prefix: true on all prefixes. I think this is a valid answer because we did the same with another community for <code>@propagates.</code> The solution was to pick one of the two options, and one of the option was implicit, and the other option requires another explicit keyword.<br/>\r\n… I suggest that we say that they have to make prefixes explicit.<br/>\r\nHarold Solbrig: I don’t think it’s going to fly for them. They have another use for the contexts and reading them as JSON. This would triple the size of their file, which may be a problem for them.<br/>\r\n… I have to leave now…<br/>\r\nBenjamin Young: I think this is the JSON-LD versus the world question, and how we best interface with the various communities.<br/>\r\n… We are highlighting several problems with different communities.<br/>\r\n… I would love there to be other options next to us saying we’re out of time.<br/>\r\n… Harold is probably right that we’re going to lose them.<br/>\r\n… We need to have a better answer for the future of JSON-LD.<br/>\r\n… For resolving issues, such as is going on now with RDF.<br/>\r\nIvan Herman: Let’s be careful with this discussion.<br/>\r\n… The RDF community has lost activity, but this is a different case.<br/>\r\n… For cases like these we need a strict deadline, saying when we do a release.<br/>\r\n… There were discussions in Fukuoka which means that it would be possible to introduce a different kind of processing for an existing spec.<br/>\r\n… Where a new feature could be added in a much shorter round.<br/>\r\n… What would happen here, if we already had a rec, and this issue came in, we go to something like a CR, that has to show implementations, and can be added to the recommendation.<br/>\r\n… What is happening now, there will be a vote on this new process soon-ish.<br/>\r\n… I would expect it to be accepted. Then we have to understand how this affects existing specs, and we have to decide if there is a community out there that wants to maintain JSON-LD like this.<br/>\r\n… It means that member companies to maintain a WG, which not all companies will want to do.<br/>\r\n… If there had been such a process around at the RDF spec time, I’m not sure such a process would have been applied for RDF, as the community became less active.<br/>\r\n… There are high probabilities that the AC meeting in Korea will not happen because of the coronavirus, so this may slow down the discussion:-(.<br/>\r\nGregg Kellogg: A living standard-type process would be good. JSON-LD is substantially different than the RDF community, because there are less things people disagree on. We shouldn’t wait for 3-5 years for future changes.<br/>\r\nIvan Herman: The goal of this new process would be to avoid gaps of several years.<br/>\r\n… The current process slows down things.<br/>\r\nBenjamin Young: People want two things: hope and a path. Our current conversations go away from that, when we say that the time is up.<br/>\r\n… We should tell people what they should do when we say time is up, instead of just saying ‘defer’.<br/>\r\n… Because this shrinks the size of the community, and we should give people hope.<br/>\r\nRob Sanderson: The value of the current process is about scoping.<br/>\r\n… If we didn’t have this feature scope, we would never finish, because new good ideas would always come.<br/>\r\nGregg Kellogg: +1 to azaroth<br/>\r\nRob Sanderson: For new product releases, you have to define the set of features a product supports.<br/>\r\n… To me, the prefix block would be a good feature to support in the future, but can not do at the moment.<br/>\r\nPierre-Antoine Champin: The global flag would be an easy thing to implement, which we could do as implementors, even if it is not supported formally.<br/>\r\nRob Sanderson: Is it actually the best solution?<br/>\r\nGregg Kellogg: The advantage of having <code>@prefix</code> of context level instead of term level, is that the processor would do the right thing when it sees it.<br/>\r\n… We definitely need some messaging to the community on what the processing is.<br/>\r\nIvan Herman: We should decide now on a resolution.<br/>\r\nProposed resolution: <code>@prefix</code> flag is a good idea, but a new feature that will be added to a future version with the hope that this will come quickly, given new W3C process options (Rob Sanderson)<br/>\r\nGregg Kellogg: +1<br/>\r\nRob Sanderson: +1<br/>\r\nRuben Taelman: +1<br/>\r\nDavid I. Lehn: +1<br/>\r\nTim Cole: +1<br/>\r\nPierre-Antoine Champin: +1<br/>\r\nIvan Herman: +1<br/>\r\nBenjamin Young: +1<br/>\r\nResolution #3: <code>@prefix</code> flag is a good idea, but a new feature that will be added to a future version with the hope that this will come quickly, given new W3C process options<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-592705425"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> .
<https://api.github.com/users/wdduncan> <http://schema.org/accountId> "wdduncan" .
<https://api.github.com/users/wdduncan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/3186638?v=4" .
<https://api.github.com/users/wdduncan> <http://schema.org/url> "https://github.com/wdduncan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/wdduncan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> <http://schema.org/creator> <https://api.github.com/users/wdduncan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> <http://schema.org/startDate> "2020-02-28T20:06:05Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/592705425> <http://schema.org/description> "@iherman Thanks for the info!" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/329#issuecomment-595892653"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/329> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> <http://schema.org/startDate> "2020-03-06T18:11:13Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/595892653> <http://schema.org/description> "This issue was discussed in [a meeting](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-03-06-json-ld#section2-2).\r\n\r\n- No actions or resolutions\r\n<details><summary><i class=\"differentiate\">View the transcript</i></summary>\r\nPrefixes<br/>\r\nRob Sanderson: <a href=\"https://github.com/w3c/json-ld-syntax/issues/329\">https://github.com/w3c/json-ld-syntax/issues/329</a><br/>\r\nHarold Solbrig: I put in a -1 as there is quite a bit of work the community will need to do to get around the issue, and they’re not anxioius to do it.<br/>\r\n… Its not that it won’t be fixed, but that we may need to wait a while.<br/>\r\n… One of the members went over previous 1.0 releases to find out where they were bit.<br/>\r\n… I hate being obnoxious about this, but I find myself representing this group, and discovering that we can’t use what’s there today. It was flaws in our own codebase which hid this.<br/>\r\nGregg Kellogg: Need to stop adding things in order to have a release, but shouldn’t stop all work and the new process should let us move more swiftly<br/>\r\n… Of all the proposed changes, the prefix wrapper or the prefix: true would solve the issue.<br/>\r\n… Or, if we could just add “_” to the list of gendelims that would go a long way towards helping.<br/>\r\n… I’ll need to go back to see how strongly the group feels.<br/>\r\nRob Sanderson: I don’t believe we can just add “_” to gendelim, as it would mean changing the algorithm and tests, which is what we determined to be the criteria for normative changes.<br/>\r\nHarold Solbrig: That’s unfortunate. The only other thing I can think about is if we can get the library authors to put in a non-standard workaround.<br/>\r\n… Otherwise, we’re putting out a spec that has so much promise but could be unusable by this community.<br/>\r\nIvan Herman: I think it’s another CR; it may change implementations that have already passed all the tests. It’s a changing feature, even if it is minor, but formally it is changing an existing feature.<br/>\r\n… The previous changes were addressing bugs.<br/>\r\nRob Sanderson: This is an intended consequence that the community is asking us to walk back, or to give them more control in managing prefixes.<br/>\r\n… One concern I have about adding “_”, is that while a lot of systems use camel-case, a number also use snake_case.<br/>\r\n… This would lead to exactly the same problem we were trying to fix.<br/>\r\nHarold Solbrig: Unfortunately, the fix in 1.1 is to have the ability to say I intend to be a prefix, and the syntax requires major structural edits.<br/>\r\n… I understand the issue, but I need to consider further and discuss with the community.<br/>\r\n… That might be a way to convince them.<br/>\r\nIvan Herman: To discuss the possibilities, we have to realize that if we go back to a WD, we run some risk, as there is no guarantee that the AC will agree to an extension of the charter. It may not be high, but it’s non-zero.<br/>\r\nHarold Solbrig: I’m split on the issue myself.<br/>\r\n… I’ll see if the number of libraries they use is limited enough that they can maintain forks.<br/>\r\n… How far out might it be before it can be addressed formally?<br/>\r\nIvan Herman: I would be hopeful that the process changes can be done relatively quickly; not 2 years.<br/>\r\n… The processes update is ongoing, and we’d need to have a discussion on turning the group into a maintenance group which could do such a change in 1-2 months.<br/>\r\n… Such a change would be backwards-compatible, so it would make it easier to do.<br/>\r\n… It means that JSON-LD becomes a kind of continuously evolving standard, similar to HTML5.<br/>\r\n… They added an element to HTML5 fairly smoothly.<br/>\r\nHarold Solbrig: I’m going to say that I don’t want to stop things, so I’m willing to revise my vote.<br/>\r\nIvan Herman: -1 is not a-priori a formal objection.<br/>\r\n… At some point in time the new process will go to the AC for a vote, and there may be people that won’t do that. So any AC members here might want to speak up about that.<br/>\r\nGregg Kellogg: The CG might make a parallel extension to the spec<br/>\r\n… prior to this group there was interest in updating towards a 1.1<br/>\r\n… maybe something could be done there to hang your hat on that describes extensions to the spec<br/>\r\n… might be obsolete if the process changes<br/>\r\nHarold Solbrig: There’s enough new stuff in 1.1 that it’s sparking new ideas, and the CG might be a good way to incubate these types of changes.<br/>\r\nDavid I. Lehn: I’m pretty sure that people implementing it are happy to put in new features, even if it’s not in 1.1. I’m worried about people starting to use proposed features that don’t survive.<br/>\r\nHarold Solbrig: The workaround right now is very minimal. We just added a “prefix” option defaulting to false, but if it’s true allows any term to be used as a prefix.<br/>\r\n… The huge cost would be to change the resources themselves.<br/>\r\nDavid I. Lehn: Adding flags might hurt interoperability.<br/>\r\n… Even if we don’t do this in 1.1, it would be good to agree on a direction.<br/>\r\nGregg Kellogg: <a href=\"https://github.com/json-ld/json-ld.org/issues\">https://github.com/json-ld/json-ld.org/issues</a><br/>\r\nRob Sanderson: It would be valuable if there were more people than just hsolbrig; if more people could join the CG and we can have a discussion in public.<br/>\r\nHarold Solbrig: There are several people raving on email that might join.<br/>\r\nRob Sanderson: One of the easiest ways to justify the new process is to be able to point to a discussion that shows why its important to be able to move quickly to support the community.<br/>\r\n… This would be good to convince the AC that we should move to such a process.<br/>\r\nHarold Solbrig: These people are interested in learning more about the process. Getting them engaged can help.<br/>\r\nRob Sanderson: I think one of your proponents is at Lawrence Berkeley labs, who are W3C members.<br/>\r\n</details>" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599269112"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> <http://schema.org/startDate> "2020-03-15T21:46:17Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599269112> <http://schema.org/description> "Indeed, this looks like it maps a prefix to itself, as there is processing to treat \"bif\" and \"bif:\" the same way. Note, but just eliminating the \"bif\" term definition, it will be used as an IRI scheme.\r\n\r\nYou might using the playground to see if the expansion/RDF conversion of your test file treats this properly.\r\n\r\nIn turtle, there's a difference between `<bif:sys_stat>` and `bif:sys_stat`, but in JSON-LD they both are specified as \"bif:sys_stat\" where we look to see if \"bif\" is a term that can be used as a prefix, but it's already a scheme." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599559404"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> .
<https://api.github.com/users/Aklakan> <http://schema.org/accountId> "Aklakan" .
<https://api.github.com/users/Aklakan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/839608?v=4" .
<https://api.github.com/users/Aklakan> <http://schema.org/url> "https://github.com/Aklakan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Aklakan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> <http://schema.org/creator> <https://api.github.com/users/Aklakan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> <http://schema.org/startDate> "2020-03-16T14:14:25Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599559404> <http://schema.org/description> "Hm, my use case was actually to just store the namespace declarations in a json-ld file with only a `@context` - no actual data in it.\r\n\r\n[This file](https://github.com/SmartDataAnalytics/jena-sparql-api/blob/546b0c4002536f2fbcb2b755cb25aad986136c47/jena-sparql-api-resources/src/main/resources/rdf-prefixes/prefix.cc.2019-12-17.jsonld#L1) is just a dump from https://prefix.cc/ and I used to use it just like\r\n```\r\nModel prefixes = RDFDataMgr.loadModel(\"rdf-prefixes/prefix.cc.2019-12-17.jsonld\");\r\n```\r\n\r\nBut I suppose for my use case, namely parsing query logs - including ones of virtuoso, I should just stick with the turtle syntax as this works as expected.\r\nSo if you feel there is no need to make this kind of use case work with JSON-LD you can just close the issue as wont-fix.\r\n\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599650628"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> .
<https://api.github.com/users/pchampin> <http://schema.org/accountId> "pchampin" .
<https://api.github.com/users/pchampin> <http://schema.org/image> "https://avatars1.githubusercontent.com/u/304612?v=4" .
<https://api.github.com/users/pchampin> <http://schema.org/url> "https://github.com/pchampin"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/pchampin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> <http://schema.org/creator> <https://api.github.com/users/pchampin> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> <http://schema.org/startDate> "2020-03-16T16:59:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599650628> <http://schema.org/description> "This problem also comes from the fact that `bif:` CURIEs are handled by older Virtuoso in a rather unorthodox way: assigning the `bif` prefix to anything else than `bif:` is rejected as an error." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599688892"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> <http://schema.org/startDate> "2020-03-16T18:16:30Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599688892> <http://schema.org/description> "The entry from prefix.cc/context is `\"bif\": \"http://www.openlinksw.com/schemas/bif#\",`" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599691834"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> .
<https://api.github.com/users/Aklakan> <http://schema.org/accountId> "Aklakan" .
<https://api.github.com/users/Aklakan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/839608?v=4" .
<https://api.github.com/users/Aklakan> <http://schema.org/url> "https://github.com/Aklakan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Aklakan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> <http://schema.org/creator> <https://api.github.com/users/Aklakan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> <http://schema.org/startDate> "2020-03-16T18:22:59Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599691834> <http://schema.org/description> "> The entry from prefix.cc/context is \"bif\": \"http://www.openlinksw.com/schemas/bif#\",\r\n\r\nThis is true, but it does not work for legacy virtuosos.\r\n\r\nAccording to my above query, DBpedia uses version 07.20.3232 and there the current prefix.cc entry works - however, the virtuoso I am working with is \"07.20.3229\" - and this one yields\r\n```\r\nVirtuoso 37000 Error SP030: SPARQL compiler, line 3: Prefixes 'sql:' and 'bif:' are reserved for SQL names at '<http://www.openlinksw.com/schemas/bif#>' before 'SELECT'\r\n```\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599694921"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> <http://schema.org/startDate> "2020-03-16T18:29:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599694921> <http://schema.org/description> "Yes, but I can't see how to classify this as a JSON-LD issue. If you're using an older version for Virtuoso, you may need to override the `\"bif\": \"bif:\"` entry to get around the issue, or as you say, just use Turtle.\r\n\r\nIn any event, I'm going to mark as \"propose closing\", please respond if you agree." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/338#issuecomment-599703241"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/338> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> .
<https://api.github.com/users/Aklakan> <http://schema.org/accountId> "Aklakan" .
<https://api.github.com/users/Aklakan> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/839608?v=4" .
<https://api.github.com/users/Aklakan> <http://schema.org/url> "https://github.com/Aklakan"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/Aklakan> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> <http://schema.org/creator> <https://api.github.com/users/Aklakan> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> <http://schema.org/startDate> "2020-03-16T18:48:58Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/599703241> <http://schema.org/description> "> Yes, but I can't see how to classify this as a JSON-LD issue\r\n\r\nWell, its one of those little details where things that seemed to be interchangeably turned out not to be in corner cases, i.e. that there exist namespace mappings that simply cannot be represented in JSON-LD although they work in the older turtle syntax, which feels a bit like a regression.\r\n\r\n\r\nSo closing the issue is fine, as for me using turtle solves it, and I don't want to put energy on it - but having stepped onto this issue still stings.\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/339#issuecomment-601542994"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> <http://schema.org/startDate> "2020-03-20T05:23:44Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601542994> <http://schema.org/description> "> The spec asserts that one can assert that a de-facto non-prefix should act like a prefix if `\"@prefix\":true`, but there is no discussion about the opposite situation.\r\n\r\nThe API document says that @prefix sets the value of the prefix flag for the associated term definition, which is in turn used when looking for terms to use when either expanding or compacting IRIs.\r\n\r\nWe've got a spec that looks like:\r\n> \r\n> ```json\r\n> {\r\n>   \"@context\": {\r\n>     \"an id\": \"http://example.org/predicate#\"\r\n>   },\r\n>   \"an id\": true\r\n> }\r\n> ```\r\n> \r\n> When this is serialized in turtle format using rdflib-jsonld 1.1 branch, it emits:\r\n> \r\n> ```turtle\r\n> @prefix an id: <http://example.org/predicate#> .\r\n> @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\r\n> @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n> @prefix xml: <http://www.w3.org/XML/1998/namespace> .\r\n> @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n> \r\n> [] an id: true .\r\n> ```\r\n> \r\n> Which isn't valid. I try to override it with\r\n> \r\n> ```json\r\n> {\r\n>   \"@context\": {\r\n>     \"an id\": {\"@id\": \"http://example.org/predicate#\", \r\n>               \"@prefix\": false}\r\n>   },\r\n>   \"an id\": true\r\n> }\r\n> ```\r\n> \r\n> The behavior didn't change. I can't find anything in the spec that _does_ say what the behavior\r\n> of `\"@prefix\": false` should be. Can we clarify (NOT a prefix I hope) so I can request a change in the rdflib code?\r\n\r\nAny interpretation of these IRIs when serializing to Turtle using rdflib is outside the bounds of our specs, which deal with just turning the JSON-LD into RDF Triples/Quads. The library may be making its own decisions by looking at terms in the context and presuming that they can be used as prefixes.\r\n\r\nWhen I serialize this to Turtle using my own processor I come up with the following:\r\n\r\n```turtle\r\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\r\n\r\n [<http://example.org/predicate#> true] .\r\n```" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/339#issuecomment-601734052"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> .
<https://api.github.com/users/hsolbrig> <http://schema.org/accountId> "hsolbrig" .
<https://api.github.com/users/hsolbrig> <http://schema.org/image> "https://avatars2.githubusercontent.com/u/415926?v=4" .
<https://api.github.com/users/hsolbrig> <http://schema.org/url> "https://github.com/hsolbrig"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/hsolbrig> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> <http://schema.org/creator> <https://api.github.com/users/hsolbrig> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> <http://schema.org/startDate> "2020-03-20T14:38:36Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601734052> <http://schema.org/description> "So do we remain silent on the `\"@prefix\": false` behavior?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/339#issuecomment-601741255"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/339> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> <http://schema.org/startDate> "2020-03-20T14:53:33Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/601741255> <http://schema.org/description> "I think the API doc is clear. I think we can probably add wording in the syntax document to describe this behavior, as it would be editorial, but we can discuss. " .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/341#issuecomment-606135863"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> .
<https://api.github.com/users/dbooth-boston> <http://schema.org/accountId> "dbooth-boston" .
<https://api.github.com/users/dbooth-boston> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/5123226?v=4" .
<https://api.github.com/users/dbooth-boston> <http://schema.org/url> "https://github.com/dbooth-boston"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/dbooth-boston> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> <http://schema.org/creator> <https://api.github.com/users/dbooth-boston> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> <http://schema.org/startDate> "2020-03-30T17:29:34Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606135863> <http://schema.org/description> "Hmm, that might not be the right section either, because it is non-normative.  Not sure what is the correct normative section to reference." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/341#issuecomment-606138365"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> <http://schema.org/startDate> "2020-03-30T17:34:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606138365> <http://schema.org/description> "It looks like that \"See the Value Objects section\" sentence belongs with the previous definition for \"value objects\".\r\n\r\nThis definition should probably point to [Context Definitions](https://w3c.github.io/json-ld-syntax/#context-definitions)." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/341#issuecomment-606151363"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/341> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> <http://schema.org/startDate> "2020-03-30T17:59:49Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/606151363> <http://schema.org/description> "Thanks for noticing @dbooth-boston. Please let us know if it is properly solved in PR #342." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/343#issuecomment-609949056"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> <http://schema.org/startDate> "2020-04-06T18:02:45Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/609949056> <http://schema.org/description> "You should use the published version at https://www.w3.org/TR/json-ld11/, which is the result of processing the editors draft and resolving all such links.\r\n\r\nThe editors draft is in a \"raw\" format, and makes use of [ReSpec](https://github.com/w3c/respec/wiki). It does provide some features that the published version doesn't (unfortunately), such as highlighted variables within algorithms. ReSpec is widely used for W3C specifications.\r\n\r\nThere is a processes used in our continuous integration to create a fully resolved version from the source in [.travis-ci.yaml](https://github.com/w3c/json-ld-syntax/blob/master/.travis.yml), if you really want to work off of the editor's draft:\r\n\r\nhttps://github.com/w3c/json-ld-syntax/blob/a65dd9acf04bce870392afd2c074c44bf86f9607/.travis.yml#L21-L33\r\n" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348#issuecomment-612919122"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> <http://schema.org/startDate> "2020-04-13T14:22:04Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612919122> <http://schema.org/description> "I wanted to demonstrate with the two different properties that it's not just a single relationship, it's a grab bag of any entities that you want to reference. If we don't think that's an issue, then yes, we can remove `team`." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348#issuecomment-612932383"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> .
<https://api.github.com/users/iherman> <http://schema.org/accountId> "iherman" .
<https://api.github.com/users/iherman> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/520723?v=4" .
<https://api.github.com/users/iherman> <http://schema.org/url> "https://github.com/iherman"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/iherman> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> <http://schema.org/creator> <https://api.github.com/users/iherman> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> <http://schema.org/startDate> "2020-04-13T14:53:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612932383> <http://schema.org/description> "@azaroth42 see https://github.com/w3c/json-ld-syntax/pull/348#discussion_r407519083" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348#issuecomment-612996948"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> <http://schema.org/startDate> "2020-04-13T17:18:20Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/612996948> <http://schema.org/description> "> I wanted to demonstrate with the two different properties that it's not just a single relationship, it's a grab bag of any entities that you want to reference. If we don't think that's an issue, then yes, we can remove `team`.\r\n\r\nI don't see how this relates to included blocks; that's certainly what has been highlighted." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/pull/348#issuecomment-613678602"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/348> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> .
<https://api.github.com/users/azaroth42> <http://schema.org/accountId> "azaroth42" .
<https://api.github.com/users/azaroth42> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/871868?v=4" .
<https://api.github.com/users/azaroth42> <http://schema.org/url> "https://github.com/azaroth42"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/azaroth42> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> <http://schema.org/creator> <https://api.github.com/users/azaroth42> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> <http://schema.org/startDate> "2020-04-14T20:59:42Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/613678602> <http://schema.org/description> "@BigBlueHat @pchampin ?" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/343#issuecomment-616717690"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> .
<https://api.github.com/users/gkellogg> <http://schema.org/accountId> "gkellogg" .
<https://api.github.com/users/gkellogg> <http://schema.org/image> "https://avatars0.githubusercontent.com/u/46296?v=4" .
<https://api.github.com/users/gkellogg> <http://schema.org/url> "https://github.com/gkellogg"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/gkellogg> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> <http://schema.org/creator> <https://api.github.com/users/gkellogg> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> <http://schema.org/startDate> "2020-04-20T17:59:03Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> <http://example.com/ns#authorAssociation> "MEMBER" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616717690> <http://schema.org/description> "[Resolved to close](https://www.w3.org/2018/json-ld-wg/Meetings/Minutes/2020/2020-04-17-json-ld#resolution1), as the final form will have anchors in the html." .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> <http://schema.org/url> "https://github.com/w3c/json-ld-syntax/issues/343#issuecomment-616750448"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/343> <http://example.com/ns#comment> <https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> .
<https://api.github.com/users/yarikoptic> <http://schema.org/accountId> "yarikoptic" .
<https://api.github.com/users/yarikoptic> <http://schema.org/image> "https://avatars3.githubusercontent.com/u/39889?v=4" .
<https://api.github.com/users/yarikoptic> <http://schema.org/url> "https://github.com/yarikoptic"^^<http://www.w3.org/2001/XMLSchema#anyURI> .
<https://api.github.com/users/yarikoptic> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://example.com/ns#User> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> <http://schema.org/creator> <https://api.github.com/users/yarikoptic> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> <http://schema.org/startDate> "2020-04-20T19:06:26Z"^^<http://www.w3.org/2001/XMLSchema#dateTimeStamp> .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> <http://example.com/ns#authorAssociation> "NONE" .
<https://api.github.com/repos/w3c/json-ld-syntax/issues/comments/616750448> <http://schema.org/description> "Thank you @gkellogg !" .

